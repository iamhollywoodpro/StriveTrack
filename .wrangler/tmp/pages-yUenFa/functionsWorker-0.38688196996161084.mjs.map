{
  "version": 3,
  "sources": ["../bundle-ovZuRF/checked-fetch.js", "../bundle-ovZuRF/strip-cf-connecting-ip-header.js", "../../../node_modules/uuid/dist/esm-browser/rng.js", "../../../node_modules/uuid/dist/esm-browser/regex.js", "../../../node_modules/uuid/dist/esm-browser/validate.js", "../../../node_modules/uuid/dist/esm-browser/stringify.js", "../../../node_modules/uuid/dist/esm-browser/v1.js", "../../../node_modules/uuid/dist/esm-browser/parse.js", "../../../node_modules/uuid/dist/esm-browser/v35.js", "../../../node_modules/uuid/dist/esm-browser/md5.js", "../../../node_modules/uuid/dist/esm-browser/v3.js", "../../../node_modules/uuid/dist/esm-browser/native.js", "../../../node_modules/uuid/dist/esm-browser/v4.js", "../../../node_modules/uuid/dist/esm-browser/sha1.js", "../../../node_modules/uuid/dist/esm-browser/v5.js", "../../../node_modules/uuid/dist/esm-browser/nil.js", "../../../node_modules/uuid/dist/esm-browser/version.js", "../../../node_modules/uuid/dist/esm-browser/index.js", "../../../functions/utils/auth.js", "../../../functions/api/media/file/[id].js", "../../../functions/utils/achievements.js", "../../../functions/utils/streaks.js", "../../../functions/api/achievements/check.js", "../../../node_modules/bcryptjs/dist/bcrypt.js", "../../../functions/utils/database.js", "../../../functions/api/admin/media.js", "../../../functions/api/admin/users.js", "../../../functions/api/auth/login.js", "../../../functions/api/auth/logout.js", "../../../functions/api/auth/register.js", "../../../functions/api/auth/validate-session.js", "../../../functions/api/challenges/daily.js", "../../../functions/api/habits/complete.js", "../../../functions/api/habits/weekly.js", "../../../functions/api/media/videos.js", "../../../functions/api/habits/[id].js", "../../../functions/api/achievements/index.js", "../../../functions/api/friends/index.js", "../../../functions/api/habits/index.js", "../../../functions/api/leaderboards/index.js", "../../../functions/api/media/index.js", "../../../functions/api/nutrition/index.js", "../../../functions/_middleware.js", "functionsRoutes-0.35696942694498124.mjs", "../bundle-ovZuRF/middleware-loader.entry.ts", "../bundle-ovZuRF/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/pages-template-worker.ts", "../../../node_modules/path-to-regexp/src/index.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../../node_modules/wrangler/templates/middleware/common.ts"],
  "sourceRoot": "/home/user/webapp/.wrangler/tmp/pages-yUenFa/functionsWorker-0.38688196996161084.mjs",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "function stripCfConnectingIPHeader(input, init) {\n\tconst request = new Request(input, init);\n\trequest.headers.delete(\"CF-Connecting-IP\");\n\treturn request;\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\treturn Reflect.apply(target, thisArg, [\n\t\t\tstripCfConnectingIPHeader.apply(null, argArray),\n\t\t]);\n\t},\n});\n", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;", "import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "import rng from './rng.js';\nimport { unsafeStringify } from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || unsafeStringify(b);\n}\n\nexport default v1;", "import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;", "import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return unsafeStringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;", "import v35 from './v35.js';\nimport md5 from './md5.js';\nconst v3 = v35('v3', 0x30, md5);\nexport default v3;", "const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;", "// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;", "import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;", "export default '00000000-0000-0000-0000-000000000000';", "import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.slice(14, 15), 16);\n}\n\nexport default version;", "export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';", "// Authentication utilities for StriveTrack\n\nexport async function getCurrentUser(request, env) {\n    const sessionId = request.headers.get('x-session-id');\n    if (!sessionId) {\n        return null;\n    }\n\n    // Check if session exists and is valid\n    const session = await env.DB.prepare(`\n        SELECT s.*, u.id as user_id, u.email, u.role, u.points\n        FROM sessions s\n        JOIN users u ON s.user_id = u.id\n        WHERE s.id = ? AND s.expires_at > datetime('now')\n    `).bind(sessionId).first();\n\n    if (!session) {\n        return null;\n    }\n\n    return {\n        id: session.user_id,\n        email: session.email,\n        role: session.role,\n        points: session.points\n    };\n}\n\nexport async function requireAuth(request, env) {\n    const user = await getCurrentUser(request, env);\n    if (!user) {\n        return new Response(JSON.stringify({ error: 'Authentication required' }), {\n            status: 401,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n    return user;\n}\n\nexport async function requireAdmin(request, env) {\n    const user = await getCurrentUser(request, env);\n    if (!user) {\n        return new Response(JSON.stringify({ error: 'Authentication required' }), {\n            status: 401,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n    \n    if (user.role !== 'admin') {\n        return new Response(JSON.stringify({ error: 'Admin access required' }), {\n            status: 403,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n    \n    return user;\n}\n\nexport async function createSession(userId, env) {\n    const { v4: uuidv4 } = await import('uuid');\n    \n    const sessionId = uuidv4();\n    const expiresAt = new Date();\n    expiresAt.setDate(expiresAt.getDate() + 30); // 30 days from now\n\n    await env.DB.prepare(`\n        INSERT INTO sessions (id, user_id, expires_at)\n        VALUES (?, ?, ?)\n    `).bind(sessionId, userId, expiresAt.toISOString()).run();\n\n    return sessionId;\n}\n\nexport async function deleteSession(sessionId, env) {\n    if (!sessionId) return;\n    \n    await env.DB.prepare('DELETE FROM sessions WHERE id = ?')\n        .bind(sessionId).run();\n}\n\nexport async function cleanupExpiredSessions(env) {\n    // Clean up expired sessions\n    await env.DB.prepare(\"DELETE FROM sessions WHERE expires_at <= datetime('now')\").run();\n}", "// Media file serving endpoint for StriveTrack\nimport { requireAuth } from '../../../utils/auth.js';\n\nexport async function onRequestGet(context) {\n    const { request, env, params } = context;\n    \n    try {\n        const authResult = await requireAuth(request, env);\n        if (authResult instanceof Response) return authResult;\n        \n        const user = authResult;\n        const mediaId = params.id;\n        \n        if (!mediaId) {\n            return new Response('Media ID required', { status: 400 });\n        }\n        \n        // Get media info from database\n        const media = await env.DB.prepare(`\n            SELECT * FROM media_uploads WHERE id = ?\n        `).bind(mediaId).first();\n        \n        if (!media) {\n            return new Response('Media not found', { status: 404 });\n        }\n        \n        // Check if user owns the media or is admin\n        if (media.user_id !== user.id && user.role !== 'admin') {\n            return new Response('Access denied', { status: 403 });\n        }\n        \n        // Get file from R2\n        const object = await env.MEDIA_BUCKET.get(media.r2_key);\n        \n        if (!object) {\n            return new Response('File not found', { status: 404 });\n        }\n        \n        // Return the file with appropriate headers\n        return new Response(object.body, {\n            headers: {\n                'Content-Type': media.file_type,\n                'Content-Length': object.size,\n                'Cache-Control': 'public, max-age=31536000', // Cache for 1 year\n                'Content-Disposition': `inline; filename=\"${media.original_name}\"`\n            }\n        });\n        \n    } catch (error) {\n        console.error('Serve media error:', error);\n        return new Response('Internal server error', { status: 500 });\n    }\n}", "// Achievement tracking and notification utilities\nexport async function checkAndAwardAchievements(userId, actionType, actionData, env) {\n    try {\n        const newAchievements = [];\n        \n        // Get user stats\n        const userStats = await getUserStats(userId, env);\n        \n        // Get all achievements user hasn't earned yet\n        const unearned = await env.DB.prepare(`\n            SELECT a.* FROM achievements a\n            LEFT JOIN user_achievements ua ON a.id = ua.achievement_id AND ua.user_id = ?\n            WHERE ua.id IS NULL AND a.is_recurring = 0\n        `).bind(userId).all();\n        \n        const unearnedAchievements = unearned.results || [];\n        \n        // Check video and nutrition achievements first\n        const videoAchievements = await checkVideoAchievements(env.DB, userId);\n        const nutritionAchievements = await checkNutritionAchievements(env.DB, userId);\n        \n        newAchievements.push(...videoAchievements, ...nutritionAchievements);\n\n        // Check each unearned achievement\n        for (const achievement of unearnedAchievements) {\n            let shouldUnlock = false;\n            \n            switch (achievement.requirement_type) {\n                case 'account_created':\n                    shouldUnlock = true;\n                    break;\n                    \n                case 'habits_created':\n                    shouldUnlock = userStats.habits_created >= achievement.requirement_value;\n                    break;\n                    \n                case 'total_completions':\n                    shouldUnlock = userStats.total_completions >= achievement.requirement_value;\n                    break;\n                    \n                case 'photos_uploaded':\n                    shouldUnlock = userStats.photos_uploaded >= achievement.requirement_value;\n                    break;\n                    \n                case 'videos_uploaded':\n                    shouldUnlock = userStats.videos_uploaded >= achievement.requirement_value;\n                    break;\n                    \n                case 'total_media':\n                    shouldUnlock = userStats.total_media >= achievement.requirement_value;\n                    break;\n                    \n                case 'total_points':\n                    shouldUnlock = userStats.total_points >= achievement.requirement_value;\n                    break;\n                    \n                case 'habit_streak':\n                    // TODO: Implement streak calculation\n                    shouldUnlock = false;\n                    break;\n                    \n                case 'weekly_before_after':\n                    // Check if user uploaded both before and after photos this week\n                    if (actionType === 'media_upload') {\n                        shouldUnlock = await checkWeeklyBeforeAfter(userId, env);\n                    }\n                    break;\n                    \n                case 'morning_completions':\n                    // Check if completion was before 10 AM\n                    if (actionType === 'habit_completion' && actionData?.time) {\n                        const hour = new Date(actionData.time).getHours();\n                        if (hour < 10) {\n                            const morningCount = await getMorningCompletions(userId, env);\n                            shouldUnlock = morningCount >= achievement.requirement_value;\n                        }\n                    }\n                    break;\n                    \n                case 'weekend_streaks':\n                    if (actionType === 'habit_completion') {\n                        shouldUnlock = await checkWeekendStreaks(userId, achievement.requirement_value, env);\n                    }\n                    break;\n                    \n                case 'habit_categories':\n                    shouldUnlock = await checkHabitVariety(userId, achievement.requirement_value, env);\n                    break;\n            }\n            \n            if (shouldUnlock) {\n                await unlockAchievement(userId, achievement.id, env);\n                newAchievements.push(achievement);\n            }\n        }\n        \n        // Check recurring achievements\n        await checkRecurringAchievements(userId, actionType, actionData, env);\n        \n        return newAchievements;\n        \n    } catch (error) {\n        console.error('Achievement check error:', error);\n        return [];\n    }\n}\n\nasync function getUserStats(userId, env) {\n    const result = await env.DB.prepare(`\n        SELECT \n            u.points as total_points,\n            u.created_at as user_created_at,\n            (SELECT COUNT(*) FROM habits WHERE user_id = ?) as habits_created,\n            (SELECT COUNT(*) FROM habit_completions WHERE user_id = ?) as total_completions,\n            (SELECT COUNT(*) FROM media_uploads WHERE user_id = ? AND file_type LIKE 'image/%') as photos_uploaded,\n            (SELECT COUNT(*) FROM media_uploads WHERE user_id = ? AND file_type LIKE 'video/%') as videos_uploaded,\n            (SELECT COUNT(*) FROM media_uploads WHERE user_id = ?) as total_media\n        FROM users u\n        WHERE u.id = ?\n    `).bind(userId, userId, userId, userId, userId, userId).first();\n    \n    return result || {\n        total_points: 0,\n        habits_created: 0,\n        total_completions: 0,\n        photos_uploaded: 0,\n        videos_uploaded: 0,\n        total_media: 0\n    };\n}\n\nasync function unlockAchievement(userId, achievementId, env) {\n    try {\n        const { v4: uuidv4 } = await import('uuid');\n        const userAchievementId = uuidv4();\n        \n        // Award the achievement\n        await env.DB.prepare(`\n            INSERT INTO user_achievements (id, user_id, achievement_id)\n            VALUES (?, ?, ?)\n        `).bind(userAchievementId, userId, achievementId).run();\n        \n        // Get achievement details for points\n        const achievement = await env.DB.prepare(\n            'SELECT points FROM achievements WHERE id = ?'\n        ).bind(achievementId).first();\n        \n        // Award points if the achievement has points\n        if (achievement && achievement.points > 0) {\n            await env.DB.prepare('UPDATE users SET points = points + ? WHERE id = ?')\n                .bind(achievement.points, userId).run();\n        }\n        \n        return true;\n    } catch (error) {\n        console.error('Unlock achievement error:', error);\n        return false;\n    }\n}\n\nasync function checkWeeklyBeforeAfter(userId, env) {\n    // Get this week's date range (Sunday to Saturday)\n    const now = new Date();\n    const weekStart = new Date(now);\n    weekStart.setDate(now.getDate() - now.getDay());\n    weekStart.setHours(0, 0, 0, 0);\n    \n    const weekEnd = new Date(weekStart);\n    weekEnd.setDate(weekStart.getDate() + 6);\n    weekEnd.setHours(23, 59, 59, 999);\n    \n    // Check for photos uploaded this week\n    const weeklyPhotos = await env.DB.prepare(`\n        SELECT uploaded_at FROM media_uploads \n        WHERE user_id = ? \n        AND file_type LIKE 'image/%' \n        AND uploaded_at >= ? \n        AND uploaded_at <= ?\n        ORDER BY uploaded_at\n    `).bind(userId, weekStart.toISOString(), weekEnd.toISOString()).all();\n    \n    const photos = weeklyPhotos.results || [];\n    \n    // Check if there are photos at the beginning and end of the week\n    if (photos.length >= 2) {\n        const firstPhoto = new Date(photos[0].uploaded_at);\n        const lastPhoto = new Date(photos[photos.length - 1].uploaded_at);\n        \n        // Check if first photo is in first 3 days and last photo is in last 3 days of week\n        const daysDiff = Math.floor((lastPhoto - firstPhoto) / (1000 * 60 * 60 * 24));\n        return daysDiff >= 3; // At least 3 days apart for before/after\n    }\n    \n    return false;\n}\n\nasync function getMorningCompletions(userId, env) {\n    const result = await env.DB.prepare(`\n        SELECT COUNT(*) as count FROM habit_completions \n        WHERE user_id = ? \n        AND strftime('%H', completed_at) < '10'\n    `).bind(userId).first();\n    \n    return result?.count || 0;\n}\n\nasync function checkWeekendStreaks(userId, targetStreaks, env) {\n    // This is a complex calculation - for now return false\n    // TODO: Implement weekend streak calculation\n    return false;\n}\n\nasync function checkHabitVariety(userId, targetCategories, env) {\n    // Count distinct categories from habit names (based on emojis/keywords)\n    const habits = await env.DB.prepare(`\n        SELECT name FROM habits WHERE user_id = ?\n    `).bind(userId).all();\n    \n    const habitList = habits.results || [];\n    const categories = new Set();\n    \n    habitList.forEach(habit => {\n        const name = habit.name.toLowerCase();\n        if (name.includes('\uD83D\uDCA7') || name.includes('water')) categories.add('hydration');\n        if (name.includes('\uD83C\uDFC3') || name.includes('cardio') || name.includes('run')) categories.add('cardio');\n        if (name.includes('\uD83D\uDCAA') || name.includes('strength') || name.includes('gym')) categories.add('strength');\n        if (name.includes('\uD83C\uDF4E') || name.includes('nutrition') || name.includes('eat')) categories.add('nutrition');\n        if (name.includes('\uD83D\uDE34') || name.includes('sleep') || name.includes('rest')) categories.add('wellness');\n        if (name.includes('\uD83D\uDCDA') || name.includes('read') || name.includes('study')) categories.add('learning');\n        if (name.includes('\uD83E\uDDD8') || name.includes('meditat') || name.includes('mindful')) categories.add('mindfulness');\n    });\n    \n    return categories.size >= targetCategories;\n}\n\nasync function checkRecurringAchievements(userId, actionType, actionData, env) {\n    // TODO: Implement recurring achievement tracking\n    // This would check weekly/monthly achievements and reset them as needed\n    return [];\n}\n\n// Create notification reminders for user\n// Video Achievement Tracking\nexport async function checkVideoAchievements(db, userId) {\n    const unlockedAchievements = [];\n    \n    try {\n        // Get video upload stats\n        const videoStats = await db.prepare(`\n            SELECT \n                COUNT(*) as total_videos,\n                COUNT(CASE WHEN video_type = 'progress' THEN 1 END) as progress_videos,\n                COUNT(CASE WHEN is_before_after = 1 THEN 1 END) as before_after_videos,\n                COUNT(CASE WHEN upload_date >= date('now', 'start of month') THEN 1 END) as this_month_videos,\n                COUNT(CASE WHEN upload_date >= date('now', '-7 days') THEN 1 END) as this_week_videos\n            FROM user_video_uploads\n            WHERE user_id = ?\n        `).bind(userId).first();\n\n        // Check weekly video consistency (4 weeks)\n        const weeklyConsistency = await db.prepare(`\n            SELECT COUNT(DISTINCT week_number) as consistent_weeks\n            FROM user_video_uploads\n            WHERE user_id = ? AND upload_date >= date('now', '-28 days')\n        `).bind(userId).first();\n\n        // Check achievements\n        const achievements = [\n            { id: 'video_first_upload', check: videoStats.total_videos >= 1 },\n            { id: 'video_weekly_creator', check: weeklyConsistency.consistent_weeks >= 4 },\n            { id: 'video_monthly_diary', check: videoStats.this_month_videos >= 7 },\n            { id: 'video_master', check: videoStats.total_videos >= 30 },\n            { id: 'before_after_video', check: videoStats.before_after_videos >= 1 },\n            { id: 'video_consistency_pro', check: await checkVideoConsistency(db, userId, 12) }\n        ];\n\n        for (const achievement of achievements) {\n            if (achievement.check) {\n                const unlocked = await unlockAchievementIfNotEarned(db, userId, achievement.id);\n                if (unlocked) unlockedAchievements.push(unlocked);\n            }\n        }\n\n    } catch (error) {\n        console.error('Video achievement check error:', error);\n    }\n    \n    return unlockedAchievements;\n}\n\n// Nutrition Achievement Tracking\nexport async function checkNutritionAchievements(db, userId) {\n    const unlockedAchievements = [];\n    \n    try {\n        // Get nutrition logging stats\n        const nutritionStats = await db.prepare(`\n            SELECT COUNT(*) as total_logs FROM user_nutrition_logs WHERE user_id = ?\n        `).bind(userId).first();\n\n        // Get daily nutrition streak stats\n        const streakStats = await getNutritionStreakStats(db, userId);\n        \n        // Get unique foods count\n        const uniqueFoods = await db.prepare(`\n            SELECT COUNT(DISTINCT food_name) as unique_count\n            FROM user_nutrition_logs WHERE user_id = ?\n        `).bind(userId).first();\n\n        // Get custom recipes count\n        const customRecipes = await db.prepare(`\n            SELECT COUNT(DISTINCT food_name) as recipe_count\n            FROM user_nutrition_logs WHERE user_id = ? AND is_custom_recipe = 1\n        `).bind(userId).first();\n\n        // Check achievements\n        const achievements = [\n            { id: 'nutrition_first_log', check: nutritionStats.total_logs >= 1 },\n            { id: 'protein_champion', check: streakStats.protein_streak >= 7 },\n            { id: 'carb_counter', check: streakStats.tracking_streak >= 14 },\n            { id: 'fat_balance_master', check: streakStats.macro_balance_streak >= 7 },\n            { id: 'macro_perfect', check: streakStats.macro_perfect_days >= 3 },\n            { id: 'nutrition_ninja', check: streakStats.tracking_streak >= 30 },\n            { id: 'calorie_conscious', check: streakStats.calorie_streak >= 7 },\n            { id: 'target_hitter', check: streakStats.calorie_streak >= 5 },\n            { id: 'sugar_tracker', check: streakStats.tracking_streak >= 14 },\n            { id: 'hydration_hero', check: streakStats.water_streak >= 10 },\n            { id: 'fiber_focus', check: streakStats.tracking_streak >= 7 },\n            { id: 'macro_mastery', check: streakStats.macro_perfect_days >= 10 },\n            { id: 'nutrition_consistency', check: streakStats.tracking_streak >= 100 },\n            { id: 'meal_variety', check: uniqueFoods.unique_count >= 50 },\n            { id: 'recipe_creator', check: customRecipes.recipe_count >= 10 }\n        ];\n\n        for (const achievement of achievements) {\n            if (achievement.check) {\n                const unlocked = await unlockAchievementIfNotEarned(db, userId, achievement.id);\n                if (unlocked) unlockedAchievements.push(unlocked);\n            }\n        }\n\n    } catch (error) {\n        console.error('Nutrition achievement check error:', error);\n    }\n    \n    return unlockedAchievements;\n}\n\n// Helper functions\nasync function checkVideoConsistency(db, userId, weeks) {\n    const result = await db.prepare(`\n        SELECT COUNT(DISTINCT week_number) as consistent_weeks\n        FROM user_video_uploads\n        WHERE user_id = ? AND upload_date >= date('now', '-' || ? || ' days')\n    `).bind(userId, weeks * 7).first();\n    \n    return result.consistent_weeks >= weeks;\n}\n\nasync function getNutritionStreakStats(db, userId) {\n    const recentDays = await db.prepare(`\n        SELECT log_date, macro_balance_score, met_calorie_goal, met_protein_goal, \n               met_carbs_goal, met_fat_goal, total_water_ml\n        FROM user_daily_nutrition\n        WHERE user_id = ?\n        ORDER BY log_date DESC\n        LIMIT 100\n    `).bind(userId).all();\n\n    let trackingStreak = 0;\n    let proteinStreak = 0;\n    let calorieStreak = 0;\n    let macroBalanceStreak = 0;\n    let waterStreak = 0;\n    let macroPerfectDays = 0;\n\n    for (const day of recentDays.results || []) {\n        if (day.macro_balance_score > 0) trackingStreak++;\n        else break;\n\n        if (day.met_protein_goal && proteinStreak === trackingStreak - 1) proteinStreak++;\n        if (day.met_calorie_goal && calorieStreak === trackingStreak - 1) calorieStreak++;\n        if (day.met_protein_goal && day.met_carbs_goal && day.met_fat_goal) {\n            if (macroBalanceStreak === trackingStreak - 1) macroBalanceStreak++;\n            macroPerfectDays++;\n        }\n        if (day.total_water_ml >= 2000 && waterStreak === trackingStreak - 1) waterStreak++;\n    }\n\n    return {\n        tracking_streak: trackingStreak,\n        protein_streak: proteinStreak,\n        calorie_streak: calorieStreak,\n        macro_balance_streak: macroBalanceStreak,\n        water_streak: waterStreak,\n        macro_perfect_days: macroPerfectDays\n    };\n}\n\nasync function unlockAchievementIfNotEarned(db, userId, achievementId) {\n    // Check if user already has this achievement\n    const existing = await db.prepare(`\n        SELECT id FROM user_achievements \n        WHERE user_id = ? AND achievement_id = ?\n    `).bind(userId, achievementId).first();\n\n    if (existing) return null;\n\n    // Get achievement details\n    const achievement = await db.prepare(`\n        SELECT * FROM achievements WHERE id = ?\n    `).bind(achievementId).first();\n\n    if (!achievement) return null;\n\n    // Award the achievement\n    const { v4: uuidv4 } = await import('uuid');\n    const userAchievementId = uuidv4();\n    \n    await db.prepare(`\n        INSERT INTO user_achievements (id, user_id, achievement_id, points_earned)\n        VALUES (?, ?, ?, ?)\n    `).bind(userAchievementId, userId, achievementId, achievement.points).run();\n\n    // Update user points\n    await db.prepare(`\n        UPDATE users SET points = points + ? WHERE id = ?\n    `).bind(achievement.points, userId).run();\n\n    return achievement;\n}\n\nexport async function createUserReminders(userId, env) {\n    try {\n        const { v4: uuidv4 } = await import('uuid');\n        \n        const reminders = [\n            {\n                id: uuidv4(),\n                user_id: userId,\n                reminder_type: 'weekly_photo',\n                title: '\uD83D\uDCF8 Weekly Before Photo',\n                message: 'Time to take your weekly before photo! Document your starting point for this week.',\n                trigger_day: 'sunday',\n                trigger_time: '09:00'\n            },\n            {\n                id: uuidv4(),\n                user_id: userId,\n                reminder_type: 'weekly_photo',\n                title: '\uD83D\uDCF8 Weekly After Photo',\n                message: 'Great week! Time to take your weekly after photo and see your progress.',\n                trigger_day: 'saturday',\n                trigger_time: '18:00'\n            },\n            {\n                id: uuidv4(),\n                user_id: userId,\n                reminder_type: 'habit',\n                title: '\uD83D\uDCAA Daily Habit Check',\n                message: 'Don\\'t forget to complete your daily habits! You\\'ve got this!',\n                trigger_day: 'daily',\n                trigger_time: '10:00'\n            },\n            {\n                id: uuidv4(),\n                user_id: userId,\n                reminder_type: 'achievement',\n                title: '\uD83C\uDFC6 Weekly Achievement Review',\n                message: 'Check your achievements and see what you\\'ve accomplished this week!',\n                trigger_day: 'sunday',\n                trigger_time: '20:00'\n            }\n        ];\n        \n        for (const reminder of reminders) {\n            await env.DB.prepare(`\n                INSERT INTO user_reminders \n                (id, user_id, reminder_type, title, message, trigger_day, trigger_time)\n                VALUES (?, ?, ?, ?, ?, ?, ?)\n            `).bind(\n                reminder.id,\n                reminder.user_id,\n                reminder.reminder_type,\n                reminder.title,\n                reminder.message,\n                reminder.trigger_day,\n                reminder.trigger_time\n            ).run();\n        }\n        \n        return reminders;\n    } catch (error) {\n        console.error('Create reminders error:', error);\n        return [];\n    }\n}", "// Streak tracking utilities\n\nexport async function updateStreak(db, userId, streakType) {\n    const today = new Date().toISOString().split('T')[0]; // YYYY-MM-DD\n    \n    try {\n        // Get current streak data\n        const currentStreak = await db.prepare(`\n            SELECT * FROM user_streaks \n            WHERE user_id = ? AND streak_type = ?\n        `).bind(userId, streakType).first();\n\n        if (!currentStreak) {\n            // Create new streak\n            await db.prepare(`\n                INSERT INTO user_streaks (id, user_id, streak_type, current_streak, best_streak, last_update_date)\n                VALUES (?, ?, ?, 1, 1, ?)\n            `).bind(`streak_${userId}_${streakType}_${Date.now()}`, userId, streakType, today).run();\n            \n            return { current_streak: 1, best_streak: 1, is_new_record: true };\n        } else {\n            const lastUpdate = new Date(currentStreak.last_update_date);\n            const todayDate = new Date(today);\n            const daysDifference = Math.floor((todayDate - lastUpdate) / (1000 * 60 * 60 * 24));\n\n            let newStreak;\n            let isNewRecord = false;\n\n            if (daysDifference === 1) {\n                // Consecutive day - increment streak\n                newStreak = currentStreak.current_streak + 1;\n            } else if (daysDifference === 0) {\n                // Same day - no change\n                newStreak = currentStreak.current_streak;\n            } else {\n                // Broken streak - reset to 1\n                newStreak = 1;\n            }\n\n            const newBestStreak = Math.max(newStreak, currentStreak.best_streak);\n            isNewRecord = newBestStreak > currentStreak.best_streak;\n\n            await db.prepare(`\n                UPDATE user_streaks \n                SET current_streak = ?, best_streak = ?, last_update_date = ?, updated_at = CURRENT_TIMESTAMP\n                WHERE user_id = ? AND streak_type = ?\n            `).bind(newStreak, newBestStreak, today, userId, streakType).run();\n\n            return { \n                current_streak: newStreak, \n                best_streak: newBestStreak, \n                is_new_record: isNewRecord,\n                days_difference: daysDifference\n            };\n        }\n    } catch (error) {\n        console.error('Streak update error:', error);\n        return null;\n    }\n}\n\nexport async function checkStreakBreak(db, userId, streakType) {\n    const today = new Date().toISOString().split('T')[0];\n    const yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    const yesterdayStr = yesterday.toISOString().split('T')[0];\n    \n    try {\n        const streak = await db.prepare(`\n            SELECT * FROM user_streaks \n            WHERE user_id = ? AND streak_type = ?\n        `).bind(userId, streakType).first();\n\n        if (streak && streak.last_update_date < yesterdayStr && streak.current_streak > 0) {\n            // Streak is broken - reset to 0\n            await db.prepare(`\n                UPDATE user_streaks \n                SET current_streak = 0, updated_at = CURRENT_TIMESTAMP\n                WHERE user_id = ? AND streak_type = ?\n            `).bind(userId, streakType).run();\n            \n            return { streak_broken: true, previous_streak: streak.current_streak };\n        }\n        \n        return { streak_broken: false };\n    } catch (error) {\n        console.error('Streak check error:', error);\n        return { streak_broken: false };\n    }\n}\n\nexport async function updateDailyChallengeProgress(db, userId, challengeType, progressAmount = 1) {\n    const today = new Date().toISOString().split('T')[0];\n    \n    try {\n        // Get relevant challenges for today\n        const challenges = await db.prepare(`\n            SELECT dc.* FROM daily_challenges dc\n            WHERE dc.is_active = 1 AND dc.requirement_type = ?\n        `).bind(challengeType).all();\n\n        const results = [];\n\n        for (const challenge of challenges.results || []) {\n            // Get or create user challenge progress\n            let userChallenge = await db.prepare(`\n                SELECT * FROM user_daily_challenges\n                WHERE user_id = ? AND challenge_id = ? AND challenge_date = ?\n            `).bind(userId, challenge.id, today).first();\n\n            if (!userChallenge) {\n                // Create new progress entry\n                const challengeId = `udc_${userId}_${challenge.id}_${today}_${Date.now()}`;\n                await db.prepare(`\n                    INSERT INTO user_daily_challenges \n                    (id, user_id, challenge_id, challenge_date, progress_count)\n                    VALUES (?, ?, ?, ?, ?)\n                `).bind(challengeId, userId, challenge.id, today, progressAmount).run();\n                \n                userChallenge = { progress_count: progressAmount, is_completed: 0 };\n            } else {\n                // Update existing progress\n                const newProgress = userChallenge.progress_count + progressAmount;\n                await db.prepare(`\n                    UPDATE user_daily_challenges \n                    SET progress_count = ?\n                    WHERE user_id = ? AND challenge_id = ? AND challenge_date = ?\n                `).bind(newProgress, userId, challenge.id, today).run();\n                \n                userChallenge.progress_count = newProgress;\n            }\n\n            // Check if challenge is completed\n            if (userChallenge.progress_count >= challenge.requirement_value && !userChallenge.is_completed) {\n                await db.prepare(`\n                    UPDATE user_daily_challenges \n                    SET is_completed = 1, completed_at = CURRENT_TIMESTAMP, points_earned = ?\n                    WHERE user_id = ? AND challenge_id = ? AND challenge_date = ?\n                `).bind(challenge.points_reward, userId, challenge.id, today).run();\n\n                // Add points to user\n                await db.prepare(`\n                    UPDATE users SET points = points + ? WHERE id = ?\n                `).bind(challenge.points_reward, userId).run();\n\n                results.push({\n                    challenge: challenge,\n                    completed: true,\n                    points_earned: challenge.points_reward\n                });\n            }\n        }\n\n        return results;\n    } catch (error) {\n        console.error('Daily challenge progress error:', error);\n        return [];\n    }\n}", "import { checkAndAwardAchievements } from '../../utils/achievements.js';\nimport { updateStreak, updateDailyChallengeProgress } from '../../utils/streaks.js';\n\nexport async function onRequestPost({ request, env }) {\n    try {\n        const sessionId = request.headers.get('x-session-id');\n        if (!sessionId) {\n            return new Response(JSON.stringify({ error: 'No session provided' }), {\n                status: 401,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n\n        // Validate session\n        const sessionQuery = await env.DB.prepare(\n            'SELECT user_id FROM sessions WHERE id = ? AND expires_at > datetime(\"now\")'\n        ).bind(sessionId).first();\n\n        if (!sessionQuery) {\n            return new Response(JSON.stringify({ error: 'Invalid or expired session' }), {\n                status: 401,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n\n        const userId = sessionQuery.user_id;\n        const { trigger } = await request.json();\n\n        // Update streaks based on trigger\n        const streakResults = [];\n        if (trigger === 'login') {\n            const loginStreak = await updateStreak(env.DB, userId, 'daily_login');\n            if (loginStreak) {\n                streakResults.push({ type: 'daily_login', ...loginStreak });\n            }\n        } else if (trigger === 'habit_completion') {\n            const habitStreak = await updateStreak(env.DB, userId, 'habit_completion');\n            if (habitStreak) {\n                streakResults.push({ type: 'habit_completion', ...habitStreak });\n            }\n            \n            // Update daily challenges for habit completion\n            await updateDailyChallengeProgress(env.DB, userId, 'habits', 1);\n        } else if (trigger === 'media_upload') {\n            // Update daily challenges for media upload\n            await updateDailyChallengeProgress(env.DB, userId, 'media', 1);\n        } else if (trigger === 'video_upload') {\n            // Update daily challenges for video upload\n            await updateDailyChallengeProgress(env.DB, userId, 'media', 1);\n        } else if (trigger === 'nutrition_log') {\n            // Update daily challenges for nutrition logging\n            await updateDailyChallengeProgress(env.DB, userId, 'nutrition', 1);\n        }\n\n        // Track achievements and get results\n        const achievementResults = await checkAndAwardAchievements(userId, trigger, {}, env);\n\n        // Get achievements that are close to completion for progress hints\n        const progressHints = await env.DB.prepare(`\n            SELECT \n                a.*,\n                uap.progress_count as current_progress,\n                CASE \n                    WHEN uap.progress_count >= a.requirement_value * 0.8 \n                    AND uap.progress_count < a.requirement_value \n                    THEN 1 \n                    ELSE 0 \n                END as show_hint\n            FROM achievements a\n            LEFT JOIN user_achievement_progress uap ON a.id = uap.achievement_id AND uap.user_id = ?\n            LEFT JOIN user_achievements ua ON a.id = ua.achievement_id AND ua.user_id = ?\n            WHERE ua.id IS NULL \n            AND uap.progress_count >= a.requirement_value * 0.8\n            AND uap.progress_count < a.requirement_value\n            LIMIT 2\n        `).bind(userId, userId).all();\n\n        const hints = progressHints.results?.map(hint => ({\n            achievement: {\n                id: hint.id,\n                name: hint.name,\n                description: hint.description,\n                icon: hint.icon,\n                difficulty: hint.difficulty\n            },\n            current_progress: hint.current_progress,\n            required_progress: hint.requirement_value\n        })) || [];\n\n        return new Response(JSON.stringify({\n            unlocked_achievements: achievementResults.unlocked || [],\n            progress_hints: hints,\n            total_points_earned: achievementResults.points_earned || 0,\n            streaks: streakResults\n        }), {\n            status: 200,\n            headers: { 'Content-Type': 'application/json' }\n        });\n\n    } catch (error) {\n        console.error('Achievement check error:', error);\n        return new Response(JSON.stringify({ error: 'Failed to check achievements' }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n}", "/*\r\n Copyright (c) 2012 Nevins Bartolomeo <nevins.bartolomeo@gmail.com>\r\n Copyright (c) 2012 Shane Girish <shaneGirish@gmail.com>\r\n Copyright (c) 2014 Daniel Wirtz <dcode@dcode.io>\r\n\r\n Redistribution and use in source and binary forms, with or without\r\n modification, are permitted provided that the following conditions\r\n are met:\r\n 1. Redistributions of source code must retain the above copyright\r\n notice, this list of conditions and the following disclaimer.\r\n 2. Redistributions in binary form must reproduce the above copyright\r\n notice, this list of conditions and the following disclaimer in the\r\n documentation and/or other materials provided with the distribution.\r\n 3. The name of the author may not be used to endorse or promote products\r\n derived from this software without specific prior written permission.\r\n\r\n THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\r\n IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @license bcrypt.js (c) 2013 Daniel Wirtz <dcode@dcode.io>\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/bcrypt.js for details\r\n */\r\n(function(global, factory) {\r\n\r\n    /* AMD */ if (typeof define === 'function' && define[\"amd\"])\r\n        define([], factory);\r\n    /* CommonJS */ else if (typeof require === 'function' && typeof module === \"object\" && module && module[\"exports\"])\r\n        module[\"exports\"] = factory();\r\n    /* Global */ else\r\n        (global[\"dcodeIO\"] = global[\"dcodeIO\"] || {})[\"bcrypt\"] = factory();\r\n\r\n}(this, function() {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * bcrypt namespace.\r\n     * @type {Object.<string,*>}\r\n     */\r\n    var bcrypt = {};\r\n\r\n    /**\r\n     * The random implementation to use as a fallback.\r\n     * @type {?function(number):!Array.<number>}\r\n     * @inner\r\n     */\r\n    var randomFallback = null;\r\n\r\n    /**\r\n     * Generates cryptographically secure random bytes.\r\n     * @function\r\n     * @param {number} len Bytes length\r\n     * @returns {!Array.<number>} Random bytes\r\n     * @throws {Error} If no random implementation is available\r\n     * @inner\r\n     */\r\n    function random(len) {\r\n        /* node */ if (typeof module !== 'undefined' && module && module['exports'])\r\n            try {\r\n                return require(\"crypto\")['randomBytes'](len);\r\n            } catch (e) {}\r\n        /* WCA */ try {\r\n            var a; (self['crypto']||self['msCrypto'])['getRandomValues'](a = new Uint32Array(len));\r\n            return Array.prototype.slice.call(a);\r\n        } catch (e) {}\r\n        /* fallback */ if (!randomFallback)\r\n            throw Error(\"Neither WebCryptoAPI nor a crypto module is available. Use bcrypt.setRandomFallback to set an alternative\");\r\n        return randomFallback(len);\r\n    }\r\n\r\n    // Test if any secure randomness source is available\r\n    var randomAvailable = false;\r\n    try {\r\n        random(1);\r\n        randomAvailable = true;\r\n    } catch (e) {}\r\n\r\n    // Default fallback, if any\r\n    randomFallback = null;\r\n    /**\r\n     * Sets the pseudo random number generator to use as a fallback if neither node's `crypto` module nor the Web Crypto\r\n     *  API is available. Please note: It is highly important that the PRNG used is cryptographically secure and that it\r\n     *  is seeded properly!\r\n     * @param {?function(number):!Array.<number>} random Function taking the number of bytes to generate as its\r\n     *  sole argument, returning the corresponding array of cryptographically secure random byte values.\r\n     * @see http://nodejs.org/api/crypto.html\r\n     * @see http://www.w3.org/TR/WebCryptoAPI/\r\n     */\r\n    bcrypt.setRandomFallback = function(random) {\r\n        randomFallback = random;\r\n    };\r\n\r\n    /**\r\n     * Synchronously generates a salt.\r\n     * @param {number=} rounds Number of rounds to use, defaults to 10 if omitted\r\n     * @param {number=} seed_length Not supported.\r\n     * @returns {string} Resulting salt\r\n     * @throws {Error} If a random fallback is required but not set\r\n     * @expose\r\n     */\r\n    bcrypt.genSaltSync = function(rounds, seed_length) {\r\n        rounds = rounds || GENSALT_DEFAULT_LOG2_ROUNDS;\r\n        if (typeof rounds !== 'number')\r\n            throw Error(\"Illegal arguments: \"+(typeof rounds)+\", \"+(typeof seed_length));\r\n        if (rounds < 4)\r\n            rounds = 4;\r\n        else if (rounds > 31)\r\n            rounds = 31;\r\n        var salt = [];\r\n        salt.push(\"$2a$\");\r\n        if (rounds < 10)\r\n            salt.push(\"0\");\r\n        salt.push(rounds.toString());\r\n        salt.push('$');\r\n        salt.push(base64_encode(random(BCRYPT_SALT_LEN), BCRYPT_SALT_LEN)); // May throw\r\n        return salt.join('');\r\n    };\r\n\r\n    /**\r\n     * Asynchronously generates a salt.\r\n     * @param {(number|function(Error, string=))=} rounds Number of rounds to use, defaults to 10 if omitted\r\n     * @param {(number|function(Error, string=))=} seed_length Not supported.\r\n     * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting salt\r\n     * @returns {!Promise} If `callback` has been omitted\r\n     * @throws {Error} If `callback` is present but not a function\r\n     * @expose\r\n     */\r\n    bcrypt.genSalt = function(rounds, seed_length, callback) {\r\n        if (typeof seed_length === 'function')\r\n            callback = seed_length,\r\n            seed_length = undefined; // Not supported.\r\n        if (typeof rounds === 'function')\r\n            callback = rounds,\r\n            rounds = undefined;\r\n        if (typeof rounds === 'undefined')\r\n            rounds = GENSALT_DEFAULT_LOG2_ROUNDS;\r\n        else if (typeof rounds !== 'number')\r\n            throw Error(\"illegal arguments: \"+(typeof rounds));\r\n\r\n        function _async(callback) {\r\n            nextTick(function() { // Pretty thin, but salting is fast enough\r\n                try {\r\n                    callback(null, bcrypt.genSaltSync(rounds));\r\n                } catch (err) {\r\n                    callback(err);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (callback) {\r\n            if (typeof callback !== 'function')\r\n                throw Error(\"Illegal callback: \"+typeof(callback));\r\n            _async(callback);\r\n        } else\r\n            return new Promise(function(resolve, reject) {\r\n                _async(function(err, res) {\r\n                    if (err) {\r\n                        reject(err);\r\n                        return;\r\n                    }\r\n                    resolve(res);\r\n                });\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Synchronously generates a hash for the given string.\r\n     * @param {string} s String to hash\r\n     * @param {(number|string)=} salt Salt length to generate or salt to use, default to 10\r\n     * @returns {string} Resulting hash\r\n     * @expose\r\n     */\r\n    bcrypt.hashSync = function(s, salt) {\r\n        if (typeof salt === 'undefined')\r\n            salt = GENSALT_DEFAULT_LOG2_ROUNDS;\r\n        if (typeof salt === 'number')\r\n            salt = bcrypt.genSaltSync(salt);\r\n        if (typeof s !== 'string' || typeof salt !== 'string')\r\n            throw Error(\"Illegal arguments: \"+(typeof s)+', '+(typeof salt));\r\n        return _hash(s, salt);\r\n    };\r\n\r\n    /**\r\n     * Asynchronously generates a hash for the given string.\r\n     * @param {string} s String to hash\r\n     * @param {number|string} salt Salt length to generate or salt to use\r\n     * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting hash\r\n     * @param {function(number)=} progressCallback Callback successively called with the percentage of rounds completed\r\n     *  (0.0 - 1.0), maximally once per `MAX_EXECUTION_TIME = 100` ms.\r\n     * @returns {!Promise} If `callback` has been omitted\r\n     * @throws {Error} If `callback` is present but not a function\r\n     * @expose\r\n     */\r\n    bcrypt.hash = function(s, salt, callback, progressCallback) {\r\n\r\n        function _async(callback) {\r\n            if (typeof s === 'string' && typeof salt === 'number')\r\n                bcrypt.genSalt(salt, function(err, salt) {\r\n                    _hash(s, salt, callback, progressCallback);\r\n                });\r\n            else if (typeof s === 'string' && typeof salt === 'string')\r\n                _hash(s, salt, callback, progressCallback);\r\n            else\r\n                nextTick(callback.bind(this, Error(\"Illegal arguments: \"+(typeof s)+', '+(typeof salt))));\r\n        }\r\n\r\n        if (callback) {\r\n            if (typeof callback !== 'function')\r\n                throw Error(\"Illegal callback: \"+typeof(callback));\r\n            _async(callback);\r\n        } else\r\n            return new Promise(function(resolve, reject) {\r\n                _async(function(err, res) {\r\n                    if (err) {\r\n                        reject(err);\r\n                        return;\r\n                    }\r\n                    resolve(res);\r\n                });\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Compares two strings of the same length in constant time.\r\n     * @param {string} known Must be of the correct length\r\n     * @param {string} unknown Must be the same length as `known`\r\n     * @returns {boolean}\r\n     * @inner\r\n     */\r\n    function safeStringCompare(known, unknown) {\r\n        var right = 0,\r\n            wrong = 0;\r\n        for (var i=0, k=known.length; i<k; ++i) {\r\n            if (known.charCodeAt(i) === unknown.charCodeAt(i))\r\n                ++right;\r\n            else\r\n                ++wrong;\r\n        }\r\n        // Prevent removal of unused variables (never true, actually)\r\n        if (right < 0)\r\n            return false;\r\n        return wrong === 0;\r\n    }\r\n\r\n    /**\r\n     * Synchronously tests a string against a hash.\r\n     * @param {string} s String to compare\r\n     * @param {string} hash Hash to test against\r\n     * @returns {boolean} true if matching, otherwise false\r\n     * @throws {Error} If an argument is illegal\r\n     * @expose\r\n     */\r\n    bcrypt.compareSync = function(s, hash) {\r\n        if (typeof s !== \"string\" || typeof hash !== \"string\")\r\n            throw Error(\"Illegal arguments: \"+(typeof s)+', '+(typeof hash));\r\n        if (hash.length !== 60)\r\n            return false;\r\n        return safeStringCompare(bcrypt.hashSync(s, hash.substr(0, hash.length-31)), hash);\r\n    };\r\n\r\n    /**\r\n     * Asynchronously compares the given data against the given hash.\r\n     * @param {string} s Data to compare\r\n     * @param {string} hash Data to be compared to\r\n     * @param {function(Error, boolean)=} callback Callback receiving the error, if any, otherwise the result\r\n     * @param {function(number)=} progressCallback Callback successively called with the percentage of rounds completed\r\n     *  (0.0 - 1.0), maximally once per `MAX_EXECUTION_TIME = 100` ms.\r\n     * @returns {!Promise} If `callback` has been omitted\r\n     * @throws {Error} If `callback` is present but not a function\r\n     * @expose\r\n     */\r\n    bcrypt.compare = function(s, hash, callback, progressCallback) {\r\n\r\n        function _async(callback) {\r\n            if (typeof s !== \"string\" || typeof hash !== \"string\") {\r\n                nextTick(callback.bind(this, Error(\"Illegal arguments: \"+(typeof s)+', '+(typeof hash))));\r\n                return;\r\n            }\r\n            if (hash.length !== 60) {\r\n                nextTick(callback.bind(this, null, false));\r\n                return;\r\n            }\r\n            bcrypt.hash(s, hash.substr(0, 29), function(err, comp) {\r\n                if (err)\r\n                    callback(err);\r\n                else\r\n                    callback(null, safeStringCompare(comp, hash));\r\n            }, progressCallback);\r\n        }\r\n\r\n        if (callback) {\r\n            if (typeof callback !== 'function')\r\n                throw Error(\"Illegal callback: \"+typeof(callback));\r\n            _async(callback);\r\n        } else\r\n            return new Promise(function(resolve, reject) {\r\n                _async(function(err, res) {\r\n                    if (err) {\r\n                        reject(err);\r\n                        return;\r\n                    }\r\n                    resolve(res);\r\n                });\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Gets the number of rounds used to encrypt the specified hash.\r\n     * @param {string} hash Hash to extract the used number of rounds from\r\n     * @returns {number} Number of rounds used\r\n     * @throws {Error} If `hash` is not a string\r\n     * @expose\r\n     */\r\n    bcrypt.getRounds = function(hash) {\r\n        if (typeof hash !== \"string\")\r\n            throw Error(\"Illegal arguments: \"+(typeof hash));\r\n        return parseInt(hash.split(\"$\")[2], 10);\r\n    };\r\n\r\n    /**\r\n     * Gets the salt portion from a hash. Does not validate the hash.\r\n     * @param {string} hash Hash to extract the salt from\r\n     * @returns {string} Extracted salt part\r\n     * @throws {Error} If `hash` is not a string or otherwise invalid\r\n     * @expose\r\n     */\r\n    bcrypt.getSalt = function(hash) {\r\n        if (typeof hash !== 'string')\r\n            throw Error(\"Illegal arguments: \"+(typeof hash));\r\n        if (hash.length !== 60)\r\n            throw Error(\"Illegal hash length: \"+hash.length+\" != 60\");\r\n        return hash.substring(0, 29);\r\n    };\r\n\r\n    /**\r\n     * Continues with the callback on the next tick.\r\n     * @function\r\n     * @param {function(...[*])} callback Callback to execute\r\n     * @inner\r\n     */\r\n    var nextTick = typeof process !== 'undefined' && process && typeof process.nextTick === 'function'\r\n        ? (typeof setImmediate === 'function' ? setImmediate : process.nextTick)\r\n        : setTimeout;\r\n\r\n    /**\r\n     * Converts a JavaScript string to UTF8 bytes.\r\n     * @param {string} str String\r\n     * @returns {!Array.<number>} UTF8 bytes\r\n     * @inner\r\n     */\r\n    function stringToBytes(str) {\r\n        var out = [],\r\n            i = 0;\r\n        utfx.encodeUTF16toUTF8(function() {\r\n            if (i >= str.length) return null;\r\n            return str.charCodeAt(i++);\r\n        }, function(b) {\r\n            out.push(b);\r\n        });\r\n        return out;\r\n    }\r\n\r\n    // A base64 implementation for the bcrypt algorithm. This is partly non-standard.\r\n\r\n    /**\r\n     * bcrypt's own non-standard base64 dictionary.\r\n     * @type {!Array.<string>}\r\n     * @const\r\n     * @inner\r\n     **/\r\n    var BASE64_CODE = \"./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\".split('');\r\n\r\n    /**\r\n     * @type {!Array.<number>}\r\n     * @const\r\n     * @inner\r\n     **/\r\n    var BASE64_INDEX = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,\r\n        1, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, -1, -1, -1, -1, -1, -1,\r\n        -1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\r\n        20, 21, 22, 23, 24, 25, 26, 27, -1, -1, -1, -1, -1, -1, 28, 29, 30,\r\n        31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\r\n        48, 49, 50, 51, 52, 53, -1, -1, -1, -1, -1];\r\n\r\n    /**\r\n     * @type {!function(...number):string}\r\n     * @inner\r\n     */\r\n    var stringFromCharCode = String.fromCharCode;\r\n\r\n    /**\r\n     * Encodes a byte array to base64 with up to len bytes of input.\r\n     * @param {!Array.<number>} b Byte array\r\n     * @param {number} len Maximum input length\r\n     * @returns {string}\r\n     * @inner\r\n     */\r\n    function base64_encode(b, len) {\r\n        var off = 0,\r\n            rs = [],\r\n            c1, c2;\r\n        if (len <= 0 || len > b.length)\r\n            throw Error(\"Illegal len: \"+len);\r\n        while (off < len) {\r\n            c1 = b[off++] & 0xff;\r\n            rs.push(BASE64_CODE[(c1 >> 2) & 0x3f]);\r\n            c1 = (c1 & 0x03) << 4;\r\n            if (off >= len) {\r\n                rs.push(BASE64_CODE[c1 & 0x3f]);\r\n                break;\r\n            }\r\n            c2 = b[off++] & 0xff;\r\n            c1 |= (c2 >> 4) & 0x0f;\r\n            rs.push(BASE64_CODE[c1 & 0x3f]);\r\n            c1 = (c2 & 0x0f) << 2;\r\n            if (off >= len) {\r\n                rs.push(BASE64_CODE[c1 & 0x3f]);\r\n                break;\r\n            }\r\n            c2 = b[off++] & 0xff;\r\n            c1 |= (c2 >> 6) & 0x03;\r\n            rs.push(BASE64_CODE[c1 & 0x3f]);\r\n            rs.push(BASE64_CODE[c2 & 0x3f]);\r\n        }\r\n        return rs.join('');\r\n    }\r\n\r\n    /**\r\n     * Decodes a base64 encoded string to up to len bytes of output.\r\n     * @param {string} s String to decode\r\n     * @param {number} len Maximum output length\r\n     * @returns {!Array.<number>}\r\n     * @inner\r\n     */\r\n    function base64_decode(s, len) {\r\n        var off = 0,\r\n            slen = s.length,\r\n            olen = 0,\r\n            rs = [],\r\n            c1, c2, c3, c4, o, code;\r\n        if (len <= 0)\r\n            throw Error(\"Illegal len: \"+len);\r\n        while (off < slen - 1 && olen < len) {\r\n            code = s.charCodeAt(off++);\r\n            c1 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\r\n            code = s.charCodeAt(off++);\r\n            c2 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\r\n            if (c1 == -1 || c2 == -1)\r\n                break;\r\n            o = (c1 << 2) >>> 0;\r\n            o |= (c2 & 0x30) >> 4;\r\n            rs.push(stringFromCharCode(o));\r\n            if (++olen >= len || off >= slen)\r\n                break;\r\n            code = s.charCodeAt(off++);\r\n            c3 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\r\n            if (c3 == -1)\r\n                break;\r\n            o = ((c2 & 0x0f) << 4) >>> 0;\r\n            o |= (c3 & 0x3c) >> 2;\r\n            rs.push(stringFromCharCode(o));\r\n            if (++olen >= len || off >= slen)\r\n                break;\r\n            code = s.charCodeAt(off++);\r\n            c4 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\r\n            o = ((c3 & 0x03) << 6) >>> 0;\r\n            o |= c4;\r\n            rs.push(stringFromCharCode(o));\r\n            ++olen;\r\n        }\r\n        var res = [];\r\n        for (off = 0; off<olen; off++)\r\n            res.push(rs[off].charCodeAt(0));\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * utfx-embeddable (c) 2014 Daniel Wirtz <dcode@dcode.io>\r\n     * Released under the Apache License, Version 2.0\r\n     * see: https://github.com/dcodeIO/utfx for details\r\n     */\r\n    var utfx = function() {\r\n        \"use strict\";\r\n\r\n        /**\r\n         * utfx namespace.\r\n         * @inner\r\n         * @type {!Object.<string,*>}\r\n         */\r\n        var utfx = {};\r\n\r\n        /**\r\n         * Maximum valid code point.\r\n         * @type {number}\r\n         * @const\r\n         */\r\n        utfx.MAX_CODEPOINT = 0x10FFFF;\r\n\r\n        /**\r\n         * Encodes UTF8 code points to UTF8 bytes.\r\n         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\r\n         *  respectively `null` if there are no more code points left or a single numeric code point.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte\r\n         */\r\n        utfx.encodeUTF8 = function(src, dst) {\r\n            var cp = null;\r\n            if (typeof src === 'number')\r\n                cp = src,\r\n                src = function() { return null; };\r\n            while (cp !== null || (cp = src()) !== null) {\r\n                if (cp < 0x80)\r\n                    dst(cp&0x7F);\r\n                else if (cp < 0x800)\r\n                    dst(((cp>>6)&0x1F)|0xC0),\r\n                    dst((cp&0x3F)|0x80);\r\n                else if (cp < 0x10000)\r\n                    dst(((cp>>12)&0x0F)|0xE0),\r\n                    dst(((cp>>6)&0x3F)|0x80),\r\n                    dst((cp&0x3F)|0x80);\r\n                else\r\n                    dst(((cp>>18)&0x07)|0xF0),\r\n                    dst(((cp>>12)&0x3F)|0x80),\r\n                    dst(((cp>>6)&0x3F)|0x80),\r\n                    dst((cp&0x3F)|0x80);\r\n                cp = null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Decodes UTF8 bytes to UTF8 code points.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there\r\n         *  are no more bytes left.\r\n         * @param {!function(number)} dst Code points destination as a function successively called with each decoded code point.\r\n         * @throws {RangeError} If a starting byte is invalid in UTF8\r\n         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the\r\n         *  remaining bytes.\r\n         */\r\n        utfx.decodeUTF8 = function(src, dst) {\r\n            var a, b, c, d, fail = function(b) {\r\n                b = b.slice(0, b.indexOf(null));\r\n                var err = Error(b.toString());\r\n                err.name = \"TruncatedError\";\r\n                err['bytes'] = b;\r\n                throw err;\r\n            };\r\n            while ((a = src()) !== null) {\r\n                if ((a&0x80) === 0)\r\n                    dst(a);\r\n                else if ((a&0xE0) === 0xC0)\r\n                    ((b = src()) === null) && fail([a, b]),\r\n                    dst(((a&0x1F)<<6) | (b&0x3F));\r\n                else if ((a&0xF0) === 0xE0)\r\n                    ((b=src()) === null || (c=src()) === null) && fail([a, b, c]),\r\n                    dst(((a&0x0F)<<12) | ((b&0x3F)<<6) | (c&0x3F));\r\n                else if ((a&0xF8) === 0xF0)\r\n                    ((b=src()) === null || (c=src()) === null || (d=src()) === null) && fail([a, b, c ,d]),\r\n                    dst(((a&0x07)<<18) | ((b&0x3F)<<12) | ((c&0x3F)<<6) | (d&0x3F));\r\n                else throw RangeError(\"Illegal starting byte: \"+a);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Converts UTF16 characters to UTF8 code points.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @param {!function(number)} dst Code points destination as a function successively called with each converted code\r\n         *  point.\r\n         */\r\n        utfx.UTF16toUTF8 = function(src, dst) {\r\n            var c1, c2 = null;\r\n            while (true) {\r\n                if ((c1 = c2 !== null ? c2 : src()) === null)\r\n                    break;\r\n                if (c1 >= 0xD800 && c1 <= 0xDFFF) {\r\n                    if ((c2 = src()) !== null) {\r\n                        if (c2 >= 0xDC00 && c2 <= 0xDFFF) {\r\n                            dst((c1-0xD800)*0x400+c2-0xDC00+0x10000);\r\n                            c2 = null; continue;\r\n                        }\r\n                    }\r\n                }\r\n                dst(c1);\r\n            }\r\n            if (c2 !== null) dst(c2);\r\n        };\r\n\r\n        /**\r\n         * Converts UTF8 code points to UTF16 characters.\r\n         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\r\n         *  respectively `null` if there are no more code points left or a single numeric code point.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.\r\n         * @throws {RangeError} If a code point is out of range\r\n         */\r\n        utfx.UTF8toUTF16 = function(src, dst) {\r\n            var cp = null;\r\n            if (typeof src === 'number')\r\n                cp = src, src = function() { return null; };\r\n            while (cp !== null || (cp = src()) !== null) {\r\n                if (cp <= 0xFFFF)\r\n                    dst(cp);\r\n                else\r\n                    cp -= 0x10000,\r\n                    dst((cp>>10)+0xD800),\r\n                    dst((cp%0x400)+0xDC00);\r\n                cp = null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Converts and encodes UTF16 characters to UTF8 bytes.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively `null`\r\n         *  if there are no more characters left.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte.\r\n         */\r\n        utfx.encodeUTF16toUTF8 = function(src, dst) {\r\n            utfx.UTF16toUTF8(src, function(cp) {\r\n                utfx.encodeUTF8(cp, dst);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Decodes and converts UTF8 bytes to UTF16 characters.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there\r\n         *  are no more bytes left.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.\r\n         * @throws {RangeError} If a starting byte is invalid in UTF8\r\n         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the remaining bytes.\r\n         */\r\n        utfx.decodeUTF8toUTF16 = function(src, dst) {\r\n            utfx.decodeUTF8(src, function(cp) {\r\n                utfx.UTF8toUTF16(cp, dst);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Calculates the byte length of an UTF8 code point.\r\n         * @param {number} cp UTF8 code point\r\n         * @returns {number} Byte length\r\n         */\r\n        utfx.calculateCodePoint = function(cp) {\r\n            return (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;\r\n        };\r\n\r\n        /**\r\n         * Calculates the number of UTF8 bytes required to store UTF8 code points.\r\n         * @param {(!function():number|null)} src Code points source as a function returning the next code point respectively\r\n         *  `null` if there are no more code points left.\r\n         * @returns {number} The number of UTF8 bytes required\r\n         */\r\n        utfx.calculateUTF8 = function(src) {\r\n            var cp, l=0;\r\n            while ((cp = src()) !== null)\r\n                l += utfx.calculateCodePoint(cp);\r\n            return l;\r\n        };\r\n\r\n        /**\r\n         * Calculates the number of UTF8 code points respectively UTF8 bytes required to store UTF16 char codes.\r\n         * @param {(!function():number|null)} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @returns {!Array.<number>} The number of UTF8 code points at index 0 and the number of UTF8 bytes required at index 1.\r\n         */\r\n        utfx.calculateUTF16asUTF8 = function(src) {\r\n            var n=0, l=0;\r\n            utfx.UTF16toUTF8(src, function(cp) {\r\n                ++n; l += utfx.calculateCodePoint(cp);\r\n            });\r\n            return [n,l];\r\n        };\r\n\r\n        return utfx;\r\n    }();\r\n\r\n    Date.now = Date.now || function() { return +new Date; };\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var BCRYPT_SALT_LEN = 16;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var GENSALT_DEFAULT_LOG2_ROUNDS = 10;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var BLOWFISH_NUM_ROUNDS = 16;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var MAX_EXECUTION_TIME = 100;\r\n\r\n    /**\r\n     * @type {Array.<number>}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var P_ORIG = [\r\n        0x243f6a88, 0x85a308d3, 0x13198a2e, 0x03707344, 0xa4093822,\r\n        0x299f31d0, 0x082efa98, 0xec4e6c89, 0x452821e6, 0x38d01377,\r\n        0xbe5466cf, 0x34e90c6c, 0xc0ac29b7, 0xc97c50dd, 0x3f84d5b5,\r\n        0xb5470917, 0x9216d5d9, 0x8979fb1b\r\n    ];\r\n\r\n    /**\r\n     * @type {Array.<number>}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var S_ORIG = [\r\n        0xd1310ba6, 0x98dfb5ac, 0x2ffd72db, 0xd01adfb7, 0xb8e1afed,\r\n        0x6a267e96, 0xba7c9045, 0xf12c7f99, 0x24a19947, 0xb3916cf7,\r\n        0x0801f2e2, 0x858efc16, 0x636920d8, 0x71574e69, 0xa458fea3,\r\n        0xf4933d7e, 0x0d95748f, 0x728eb658, 0x718bcd58, 0x82154aee,\r\n        0x7b54a41d, 0xc25a59b5, 0x9c30d539, 0x2af26013, 0xc5d1b023,\r\n        0x286085f0, 0xca417918, 0xb8db38ef, 0x8e79dcb0, 0x603a180e,\r\n        0x6c9e0e8b, 0xb01e8a3e, 0xd71577c1, 0xbd314b27, 0x78af2fda,\r\n        0x55605c60, 0xe65525f3, 0xaa55ab94, 0x57489862, 0x63e81440,\r\n        0x55ca396a, 0x2aab10b6, 0xb4cc5c34, 0x1141e8ce, 0xa15486af,\r\n        0x7c72e993, 0xb3ee1411, 0x636fbc2a, 0x2ba9c55d, 0x741831f6,\r\n        0xce5c3e16, 0x9b87931e, 0xafd6ba33, 0x6c24cf5c, 0x7a325381,\r\n        0x28958677, 0x3b8f4898, 0x6b4bb9af, 0xc4bfe81b, 0x66282193,\r\n        0x61d809cc, 0xfb21a991, 0x487cac60, 0x5dec8032, 0xef845d5d,\r\n        0xe98575b1, 0xdc262302, 0xeb651b88, 0x23893e81, 0xd396acc5,\r\n        0x0f6d6ff3, 0x83f44239, 0x2e0b4482, 0xa4842004, 0x69c8f04a,\r\n        0x9e1f9b5e, 0x21c66842, 0xf6e96c9a, 0x670c9c61, 0xabd388f0,\r\n        0x6a51a0d2, 0xd8542f68, 0x960fa728, 0xab5133a3, 0x6eef0b6c,\r\n        0x137a3be4, 0xba3bf050, 0x7efb2a98, 0xa1f1651d, 0x39af0176,\r\n        0x66ca593e, 0x82430e88, 0x8cee8619, 0x456f9fb4, 0x7d84a5c3,\r\n        0x3b8b5ebe, 0xe06f75d8, 0x85c12073, 0x401a449f, 0x56c16aa6,\r\n        0x4ed3aa62, 0x363f7706, 0x1bfedf72, 0x429b023d, 0x37d0d724,\r\n        0xd00a1248, 0xdb0fead3, 0x49f1c09b, 0x075372c9, 0x80991b7b,\r\n        0x25d479d8, 0xf6e8def7, 0xe3fe501a, 0xb6794c3b, 0x976ce0bd,\r\n        0x04c006ba, 0xc1a94fb6, 0x409f60c4, 0x5e5c9ec2, 0x196a2463,\r\n        0x68fb6faf, 0x3e6c53b5, 0x1339b2eb, 0x3b52ec6f, 0x6dfc511f,\r\n        0x9b30952c, 0xcc814544, 0xaf5ebd09, 0xbee3d004, 0xde334afd,\r\n        0x660f2807, 0x192e4bb3, 0xc0cba857, 0x45c8740f, 0xd20b5f39,\r\n        0xb9d3fbdb, 0x5579c0bd, 0x1a60320a, 0xd6a100c6, 0x402c7279,\r\n        0x679f25fe, 0xfb1fa3cc, 0x8ea5e9f8, 0xdb3222f8, 0x3c7516df,\r\n        0xfd616b15, 0x2f501ec8, 0xad0552ab, 0x323db5fa, 0xfd238760,\r\n        0x53317b48, 0x3e00df82, 0x9e5c57bb, 0xca6f8ca0, 0x1a87562e,\r\n        0xdf1769db, 0xd542a8f6, 0x287effc3, 0xac6732c6, 0x8c4f5573,\r\n        0x695b27b0, 0xbbca58c8, 0xe1ffa35d, 0xb8f011a0, 0x10fa3d98,\r\n        0xfd2183b8, 0x4afcb56c, 0x2dd1d35b, 0x9a53e479, 0xb6f84565,\r\n        0xd28e49bc, 0x4bfb9790, 0xe1ddf2da, 0xa4cb7e33, 0x62fb1341,\r\n        0xcee4c6e8, 0xef20cada, 0x36774c01, 0xd07e9efe, 0x2bf11fb4,\r\n        0x95dbda4d, 0xae909198, 0xeaad8e71, 0x6b93d5a0, 0xd08ed1d0,\r\n        0xafc725e0, 0x8e3c5b2f, 0x8e7594b7, 0x8ff6e2fb, 0xf2122b64,\r\n        0x8888b812, 0x900df01c, 0x4fad5ea0, 0x688fc31c, 0xd1cff191,\r\n        0xb3a8c1ad, 0x2f2f2218, 0xbe0e1777, 0xea752dfe, 0x8b021fa1,\r\n        0xe5a0cc0f, 0xb56f74e8, 0x18acf3d6, 0xce89e299, 0xb4a84fe0,\r\n        0xfd13e0b7, 0x7cc43b81, 0xd2ada8d9, 0x165fa266, 0x80957705,\r\n        0x93cc7314, 0x211a1477, 0xe6ad2065, 0x77b5fa86, 0xc75442f5,\r\n        0xfb9d35cf, 0xebcdaf0c, 0x7b3e89a0, 0xd6411bd3, 0xae1e7e49,\r\n        0x00250e2d, 0x2071b35e, 0x226800bb, 0x57b8e0af, 0x2464369b,\r\n        0xf009b91e, 0x5563911d, 0x59dfa6aa, 0x78c14389, 0xd95a537f,\r\n        0x207d5ba2, 0x02e5b9c5, 0x83260376, 0x6295cfa9, 0x11c81968,\r\n        0x4e734a41, 0xb3472dca, 0x7b14a94a, 0x1b510052, 0x9a532915,\r\n        0xd60f573f, 0xbc9bc6e4, 0x2b60a476, 0x81e67400, 0x08ba6fb5,\r\n        0x571be91f, 0xf296ec6b, 0x2a0dd915, 0xb6636521, 0xe7b9f9b6,\r\n        0xff34052e, 0xc5855664, 0x53b02d5d, 0xa99f8fa1, 0x08ba4799,\r\n        0x6e85076a, 0x4b7a70e9, 0xb5b32944, 0xdb75092e, 0xc4192623,\r\n        0xad6ea6b0, 0x49a7df7d, 0x9cee60b8, 0x8fedb266, 0xecaa8c71,\r\n        0x699a17ff, 0x5664526c, 0xc2b19ee1, 0x193602a5, 0x75094c29,\r\n        0xa0591340, 0xe4183a3e, 0x3f54989a, 0x5b429d65, 0x6b8fe4d6,\r\n        0x99f73fd6, 0xa1d29c07, 0xefe830f5, 0x4d2d38e6, 0xf0255dc1,\r\n        0x4cdd2086, 0x8470eb26, 0x6382e9c6, 0x021ecc5e, 0x09686b3f,\r\n        0x3ebaefc9, 0x3c971814, 0x6b6a70a1, 0x687f3584, 0x52a0e286,\r\n        0xb79c5305, 0xaa500737, 0x3e07841c, 0x7fdeae5c, 0x8e7d44ec,\r\n        0x5716f2b8, 0xb03ada37, 0xf0500c0d, 0xf01c1f04, 0x0200b3ff,\r\n        0xae0cf51a, 0x3cb574b2, 0x25837a58, 0xdc0921bd, 0xd19113f9,\r\n        0x7ca92ff6, 0x94324773, 0x22f54701, 0x3ae5e581, 0x37c2dadc,\r\n        0xc8b57634, 0x9af3dda7, 0xa9446146, 0x0fd0030e, 0xecc8c73e,\r\n        0xa4751e41, 0xe238cd99, 0x3bea0e2f, 0x3280bba1, 0x183eb331,\r\n        0x4e548b38, 0x4f6db908, 0x6f420d03, 0xf60a04bf, 0x2cb81290,\r\n        0x24977c79, 0x5679b072, 0xbcaf89af, 0xde9a771f, 0xd9930810,\r\n        0xb38bae12, 0xdccf3f2e, 0x5512721f, 0x2e6b7124, 0x501adde6,\r\n        0x9f84cd87, 0x7a584718, 0x7408da17, 0xbc9f9abc, 0xe94b7d8c,\r\n        0xec7aec3a, 0xdb851dfa, 0x63094366, 0xc464c3d2, 0xef1c1847,\r\n        0x3215d908, 0xdd433b37, 0x24c2ba16, 0x12a14d43, 0x2a65c451,\r\n        0x50940002, 0x133ae4dd, 0x71dff89e, 0x10314e55, 0x81ac77d6,\r\n        0x5f11199b, 0x043556f1, 0xd7a3c76b, 0x3c11183b, 0x5924a509,\r\n        0xf28fe6ed, 0x97f1fbfa, 0x9ebabf2c, 0x1e153c6e, 0x86e34570,\r\n        0xeae96fb1, 0x860e5e0a, 0x5a3e2ab3, 0x771fe71c, 0x4e3d06fa,\r\n        0x2965dcb9, 0x99e71d0f, 0x803e89d6, 0x5266c825, 0x2e4cc978,\r\n        0x9c10b36a, 0xc6150eba, 0x94e2ea78, 0xa5fc3c53, 0x1e0a2df4,\r\n        0xf2f74ea7, 0x361d2b3d, 0x1939260f, 0x19c27960, 0x5223a708,\r\n        0xf71312b6, 0xebadfe6e, 0xeac31f66, 0xe3bc4595, 0xa67bc883,\r\n        0xb17f37d1, 0x018cff28, 0xc332ddef, 0xbe6c5aa5, 0x65582185,\r\n        0x68ab9802, 0xeecea50f, 0xdb2f953b, 0x2aef7dad, 0x5b6e2f84,\r\n        0x1521b628, 0x29076170, 0xecdd4775, 0x619f1510, 0x13cca830,\r\n        0xeb61bd96, 0x0334fe1e, 0xaa0363cf, 0xb5735c90, 0x4c70a239,\r\n        0xd59e9e0b, 0xcbaade14, 0xeecc86bc, 0x60622ca7, 0x9cab5cab,\r\n        0xb2f3846e, 0x648b1eaf, 0x19bdf0ca, 0xa02369b9, 0x655abb50,\r\n        0x40685a32, 0x3c2ab4b3, 0x319ee9d5, 0xc021b8f7, 0x9b540b19,\r\n        0x875fa099, 0x95f7997e, 0x623d7da8, 0xf837889a, 0x97e32d77,\r\n        0x11ed935f, 0x16681281, 0x0e358829, 0xc7e61fd6, 0x96dedfa1,\r\n        0x7858ba99, 0x57f584a5, 0x1b227263, 0x9b83c3ff, 0x1ac24696,\r\n        0xcdb30aeb, 0x532e3054, 0x8fd948e4, 0x6dbc3128, 0x58ebf2ef,\r\n        0x34c6ffea, 0xfe28ed61, 0xee7c3c73, 0x5d4a14d9, 0xe864b7e3,\r\n        0x42105d14, 0x203e13e0, 0x45eee2b6, 0xa3aaabea, 0xdb6c4f15,\r\n        0xfacb4fd0, 0xc742f442, 0xef6abbb5, 0x654f3b1d, 0x41cd2105,\r\n        0xd81e799e, 0x86854dc7, 0xe44b476a, 0x3d816250, 0xcf62a1f2,\r\n        0x5b8d2646, 0xfc8883a0, 0xc1c7b6a3, 0x7f1524c3, 0x69cb7492,\r\n        0x47848a0b, 0x5692b285, 0x095bbf00, 0xad19489d, 0x1462b174,\r\n        0x23820e00, 0x58428d2a, 0x0c55f5ea, 0x1dadf43e, 0x233f7061,\r\n        0x3372f092, 0x8d937e41, 0xd65fecf1, 0x6c223bdb, 0x7cde3759,\r\n        0xcbee7460, 0x4085f2a7, 0xce77326e, 0xa6078084, 0x19f8509e,\r\n        0xe8efd855, 0x61d99735, 0xa969a7aa, 0xc50c06c2, 0x5a04abfc,\r\n        0x800bcadc, 0x9e447a2e, 0xc3453484, 0xfdd56705, 0x0e1e9ec9,\r\n        0xdb73dbd3, 0x105588cd, 0x675fda79, 0xe3674340, 0xc5c43465,\r\n        0x713e38d8, 0x3d28f89e, 0xf16dff20, 0x153e21e7, 0x8fb03d4a,\r\n        0xe6e39f2b, 0xdb83adf7, 0xe93d5a68, 0x948140f7, 0xf64c261c,\r\n        0x94692934, 0x411520f7, 0x7602d4f7, 0xbcf46b2e, 0xd4a20068,\r\n        0xd4082471, 0x3320f46a, 0x43b7d4b7, 0x500061af, 0x1e39f62e,\r\n        0x97244546, 0x14214f74, 0xbf8b8840, 0x4d95fc1d, 0x96b591af,\r\n        0x70f4ddd3, 0x66a02f45, 0xbfbc09ec, 0x03bd9785, 0x7fac6dd0,\r\n        0x31cb8504, 0x96eb27b3, 0x55fd3941, 0xda2547e6, 0xabca0a9a,\r\n        0x28507825, 0x530429f4, 0x0a2c86da, 0xe9b66dfb, 0x68dc1462,\r\n        0xd7486900, 0x680ec0a4, 0x27a18dee, 0x4f3ffea2, 0xe887ad8c,\r\n        0xb58ce006, 0x7af4d6b6, 0xaace1e7c, 0xd3375fec, 0xce78a399,\r\n        0x406b2a42, 0x20fe9e35, 0xd9f385b9, 0xee39d7ab, 0x3b124e8b,\r\n        0x1dc9faf7, 0x4b6d1856, 0x26a36631, 0xeae397b2, 0x3a6efa74,\r\n        0xdd5b4332, 0x6841e7f7, 0xca7820fb, 0xfb0af54e, 0xd8feb397,\r\n        0x454056ac, 0xba489527, 0x55533a3a, 0x20838d87, 0xfe6ba9b7,\r\n        0xd096954b, 0x55a867bc, 0xa1159a58, 0xcca92963, 0x99e1db33,\r\n        0xa62a4a56, 0x3f3125f9, 0x5ef47e1c, 0x9029317c, 0xfdf8e802,\r\n        0x04272f70, 0x80bb155c, 0x05282ce3, 0x95c11548, 0xe4c66d22,\r\n        0x48c1133f, 0xc70f86dc, 0x07f9c9ee, 0x41041f0f, 0x404779a4,\r\n        0x5d886e17, 0x325f51eb, 0xd59bc0d1, 0xf2bcc18f, 0x41113564,\r\n        0x257b7834, 0x602a9c60, 0xdff8e8a3, 0x1f636c1b, 0x0e12b4c2,\r\n        0x02e1329e, 0xaf664fd1, 0xcad18115, 0x6b2395e0, 0x333e92e1,\r\n        0x3b240b62, 0xeebeb922, 0x85b2a20e, 0xe6ba0d99, 0xde720c8c,\r\n        0x2da2f728, 0xd0127845, 0x95b794fd, 0x647d0862, 0xe7ccf5f0,\r\n        0x5449a36f, 0x877d48fa, 0xc39dfd27, 0xf33e8d1e, 0x0a476341,\r\n        0x992eff74, 0x3a6f6eab, 0xf4f8fd37, 0xa812dc60, 0xa1ebddf8,\r\n        0x991be14c, 0xdb6e6b0d, 0xc67b5510, 0x6d672c37, 0x2765d43b,\r\n        0xdcd0e804, 0xf1290dc7, 0xcc00ffa3, 0xb5390f92, 0x690fed0b,\r\n        0x667b9ffb, 0xcedb7d9c, 0xa091cf0b, 0xd9155ea3, 0xbb132f88,\r\n        0x515bad24, 0x7b9479bf, 0x763bd6eb, 0x37392eb3, 0xcc115979,\r\n        0x8026e297, 0xf42e312d, 0x6842ada7, 0xc66a2b3b, 0x12754ccc,\r\n        0x782ef11c, 0x6a124237, 0xb79251e7, 0x06a1bbe6, 0x4bfb6350,\r\n        0x1a6b1018, 0x11caedfa, 0x3d25bdd8, 0xe2e1c3c9, 0x44421659,\r\n        0x0a121386, 0xd90cec6e, 0xd5abea2a, 0x64af674e, 0xda86a85f,\r\n        0xbebfe988, 0x64e4c3fe, 0x9dbc8057, 0xf0f7c086, 0x60787bf8,\r\n        0x6003604d, 0xd1fd8346, 0xf6381fb0, 0x7745ae04, 0xd736fccc,\r\n        0x83426b33, 0xf01eab71, 0xb0804187, 0x3c005e5f, 0x77a057be,\r\n        0xbde8ae24, 0x55464299, 0xbf582e61, 0x4e58f48f, 0xf2ddfda2,\r\n        0xf474ef38, 0x8789bdc2, 0x5366f9c3, 0xc8b38e74, 0xb475f255,\r\n        0x46fcd9b9, 0x7aeb2661, 0x8b1ddf84, 0x846a0e79, 0x915f95e2,\r\n        0x466e598e, 0x20b45770, 0x8cd55591, 0xc902de4c, 0xb90bace1,\r\n        0xbb8205d0, 0x11a86248, 0x7574a99e, 0xb77f19b6, 0xe0a9dc09,\r\n        0x662d09a1, 0xc4324633, 0xe85a1f02, 0x09f0be8c, 0x4a99a025,\r\n        0x1d6efe10, 0x1ab93d1d, 0x0ba5a4df, 0xa186f20f, 0x2868f169,\r\n        0xdcb7da83, 0x573906fe, 0xa1e2ce9b, 0x4fcd7f52, 0x50115e01,\r\n        0xa70683fa, 0xa002b5c4, 0x0de6d027, 0x9af88c27, 0x773f8641,\r\n        0xc3604c06, 0x61a806b5, 0xf0177a28, 0xc0f586e0, 0x006058aa,\r\n        0x30dc7d62, 0x11e69ed7, 0x2338ea63, 0x53c2dd94, 0xc2c21634,\r\n        0xbbcbee56, 0x90bcb6de, 0xebfc7da1, 0xce591d76, 0x6f05e409,\r\n        0x4b7c0188, 0x39720a3d, 0x7c927c24, 0x86e3725f, 0x724d9db9,\r\n        0x1ac15bb4, 0xd39eb8fc, 0xed545578, 0x08fca5b5, 0xd83d7cd3,\r\n        0x4dad0fc4, 0x1e50ef5e, 0xb161e6f8, 0xa28514d9, 0x6c51133c,\r\n        0x6fd5c7e7, 0x56e14ec4, 0x362abfce, 0xddc6c837, 0xd79a3234,\r\n        0x92638212, 0x670efa8e, 0x406000e0, 0x3a39ce37, 0xd3faf5cf,\r\n        0xabc27737, 0x5ac52d1b, 0x5cb0679e, 0x4fa33742, 0xd3822740,\r\n        0x99bc9bbe, 0xd5118e9d, 0xbf0f7315, 0xd62d1c7e, 0xc700c47b,\r\n        0xb78c1b6b, 0x21a19045, 0xb26eb1be, 0x6a366eb4, 0x5748ab2f,\r\n        0xbc946e79, 0xc6a376d2, 0x6549c2c8, 0x530ff8ee, 0x468dde7d,\r\n        0xd5730a1d, 0x4cd04dc6, 0x2939bbdb, 0xa9ba4650, 0xac9526e8,\r\n        0xbe5ee304, 0xa1fad5f0, 0x6a2d519a, 0x63ef8ce2, 0x9a86ee22,\r\n        0xc089c2b8, 0x43242ef6, 0xa51e03aa, 0x9cf2d0a4, 0x83c061ba,\r\n        0x9be96a4d, 0x8fe51550, 0xba645bd6, 0x2826a2f9, 0xa73a3ae1,\r\n        0x4ba99586, 0xef5562e9, 0xc72fefd3, 0xf752f7da, 0x3f046f69,\r\n        0x77fa0a59, 0x80e4a915, 0x87b08601, 0x9b09e6ad, 0x3b3ee593,\r\n        0xe990fd5a, 0x9e34d797, 0x2cf0b7d9, 0x022b8b51, 0x96d5ac3a,\r\n        0x017da67d, 0xd1cf3ed6, 0x7c7d2d28, 0x1f9f25cf, 0xadf2b89b,\r\n        0x5ad6b472, 0x5a88f54c, 0xe029ac71, 0xe019a5e6, 0x47b0acfd,\r\n        0xed93fa9b, 0xe8d3c48d, 0x283b57cc, 0xf8d56629, 0x79132e28,\r\n        0x785f0191, 0xed756055, 0xf7960e44, 0xe3d35e8c, 0x15056dd4,\r\n        0x88f46dba, 0x03a16125, 0x0564f0bd, 0xc3eb9e15, 0x3c9057a2,\r\n        0x97271aec, 0xa93a072a, 0x1b3f6d9b, 0x1e6321f5, 0xf59c66fb,\r\n        0x26dcf319, 0x7533d928, 0xb155fdf5, 0x03563482, 0x8aba3cbb,\r\n        0x28517711, 0xc20ad9f8, 0xabcc5167, 0xccad925f, 0x4de81751,\r\n        0x3830dc8e, 0x379d5862, 0x9320f991, 0xea7a90c2, 0xfb3e7bce,\r\n        0x5121ce64, 0x774fbe32, 0xa8b6e37e, 0xc3293d46, 0x48de5369,\r\n        0x6413e680, 0xa2ae0810, 0xdd6db224, 0x69852dfd, 0x09072166,\r\n        0xb39a460a, 0x6445c0dd, 0x586cdecf, 0x1c20c8ae, 0x5bbef7dd,\r\n        0x1b588d40, 0xccd2017f, 0x6bb4e3bb, 0xdda26a7e, 0x3a59ff45,\r\n        0x3e350a44, 0xbcb4cdd5, 0x72eacea8, 0xfa6484bb, 0x8d6612ae,\r\n        0xbf3c6f47, 0xd29be463, 0x542f5d9e, 0xaec2771b, 0xf64e6370,\r\n        0x740e0d8d, 0xe75b1357, 0xf8721671, 0xaf537d5d, 0x4040cb08,\r\n        0x4eb4e2cc, 0x34d2466a, 0x0115af84, 0xe1b00428, 0x95983a1d,\r\n        0x06b89fb4, 0xce6ea048, 0x6f3f3b82, 0x3520ab82, 0x011a1d4b,\r\n        0x277227f8, 0x611560b1, 0xe7933fdc, 0xbb3a792b, 0x344525bd,\r\n        0xa08839e1, 0x51ce794b, 0x2f32c9b7, 0xa01fbac9, 0xe01cc87e,\r\n        0xbcc7d1f6, 0xcf0111c3, 0xa1e8aac7, 0x1a908749, 0xd44fbd9a,\r\n        0xd0dadecb, 0xd50ada38, 0x0339c32a, 0xc6913667, 0x8df9317c,\r\n        0xe0b12b4f, 0xf79e59b7, 0x43f5bb3a, 0xf2d519ff, 0x27d9459c,\r\n        0xbf97222c, 0x15e6fc2a, 0x0f91fc71, 0x9b941525, 0xfae59361,\r\n        0xceb69ceb, 0xc2a86459, 0x12baa8d1, 0xb6c1075e, 0xe3056a0c,\r\n        0x10d25065, 0xcb03a442, 0xe0ec6e0e, 0x1698db3b, 0x4c98a0be,\r\n        0x3278e964, 0x9f1f9532, 0xe0d392df, 0xd3a0342b, 0x8971f21e,\r\n        0x1b0a7441, 0x4ba3348c, 0xc5be7120, 0xc37632d8, 0xdf359f8d,\r\n        0x9b992f2e, 0xe60b6f47, 0x0fe3f11d, 0xe54cda54, 0x1edad891,\r\n        0xce6279cf, 0xcd3e7e6f, 0x1618b166, 0xfd2c1d05, 0x848fd2c5,\r\n        0xf6fb2299, 0xf523f357, 0xa6327623, 0x93a83531, 0x56cccd02,\r\n        0xacf08162, 0x5a75ebb5, 0x6e163697, 0x88d273cc, 0xde966292,\r\n        0x81b949d0, 0x4c50901b, 0x71c65614, 0xe6c6c7bd, 0x327a140a,\r\n        0x45e1d006, 0xc3f27b9a, 0xc9aa53fd, 0x62a80f00, 0xbb25bfe2,\r\n        0x35bdd2f6, 0x71126905, 0xb2040222, 0xb6cbcf7c, 0xcd769c2b,\r\n        0x53113ec0, 0x1640e3d3, 0x38abbd60, 0x2547adf0, 0xba38209c,\r\n        0xf746ce76, 0x77afa1c5, 0x20756060, 0x85cbfe4e, 0x8ae88dd8,\r\n        0x7aaaf9b0, 0x4cf9aa7e, 0x1948c25c, 0x02fb8a8c, 0x01c36ae4,\r\n        0xd6ebe1f9, 0x90d4f869, 0xa65cdea0, 0x3f09252d, 0xc208e69f,\r\n        0xb74e6132, 0xce77e25b, 0x578fdfe3, 0x3ac372e6\r\n    ];\r\n\r\n    /**\r\n     * @type {Array.<number>}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var C_ORIG = [\r\n        0x4f727068, 0x65616e42, 0x65686f6c, 0x64657253, 0x63727944,\r\n        0x6f756274\r\n    ];\r\n\r\n    /**\r\n     * @param {Array.<number>} lr\r\n     * @param {number} off\r\n     * @param {Array.<number>} P\r\n     * @param {Array.<number>} S\r\n     * @returns {Array.<number>}\r\n     * @inner\r\n     */\r\n    function _encipher(lr, off, P, S) { // This is our bottleneck: 1714/1905 ticks / 90% - see profile.txt\r\n        var n,\r\n            l = lr[off],\r\n            r = lr[off + 1];\r\n\r\n        l ^= P[0];\r\n\r\n        /*\r\n        for (var i=0, k=BLOWFISH_NUM_ROUNDS-2; i<=k;)\r\n            // Feistel substitution on left word\r\n            n  = S[l >>> 24],\r\n            n += S[0x100 | ((l >> 16) & 0xff)],\r\n            n ^= S[0x200 | ((l >> 8) & 0xff)],\r\n            n += S[0x300 | (l & 0xff)],\r\n            r ^= n ^ P[++i],\r\n            // Feistel substitution on right word\r\n            n  = S[r >>> 24],\r\n            n += S[0x100 | ((r >> 16) & 0xff)],\r\n            n ^= S[0x200 | ((r >> 8) & 0xff)],\r\n            n += S[0x300 | (r & 0xff)],\r\n            l ^= n ^ P[++i];\r\n        */\r\n\r\n        //The following is an unrolled version of the above loop.\r\n        //Iteration 0\r\n        n  = S[l >>> 24];\r\n        n += S[0x100 | ((l >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n        n += S[0x300 | (l & 0xff)];\r\n        r ^= n ^ P[1];\r\n        n  = S[r >>> 24];\r\n        n += S[0x100 | ((r >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n        n += S[0x300 | (r & 0xff)];\r\n        l ^= n ^ P[2];\r\n        //Iteration 1\r\n        n  = S[l >>> 24];\r\n        n += S[0x100 | ((l >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n        n += S[0x300 | (l & 0xff)];\r\n        r ^= n ^ P[3];\r\n        n  = S[r >>> 24];\r\n        n += S[0x100 | ((r >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n        n += S[0x300 | (r & 0xff)];\r\n        l ^= n ^ P[4];\r\n        //Iteration 2\r\n        n  = S[l >>> 24];\r\n        n += S[0x100 | ((l >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n        n += S[0x300 | (l & 0xff)];\r\n        r ^= n ^ P[5];\r\n        n  = S[r >>> 24];\r\n        n += S[0x100 | ((r >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n        n += S[0x300 | (r & 0xff)];\r\n        l ^= n ^ P[6];\r\n        //Iteration 3\r\n        n  = S[l >>> 24];\r\n        n += S[0x100 | ((l >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n        n += S[0x300 | (l & 0xff)];\r\n        r ^= n ^ P[7];\r\n        n  = S[r >>> 24];\r\n        n += S[0x100 | ((r >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n        n += S[0x300 | (r & 0xff)];\r\n        l ^= n ^ P[8];\r\n        //Iteration 4\r\n        n  = S[l >>> 24];\r\n        n += S[0x100 | ((l >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n        n += S[0x300 | (l & 0xff)];\r\n        r ^= n ^ P[9];\r\n        n  = S[r >>> 24];\r\n        n += S[0x100 | ((r >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n        n += S[0x300 | (r & 0xff)];\r\n        l ^= n ^ P[10];\r\n        //Iteration 5\r\n        n  = S[l >>> 24];\r\n        n += S[0x100 | ((l >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n        n += S[0x300 | (l & 0xff)];\r\n        r ^= n ^ P[11];\r\n        n  = S[r >>> 24];\r\n        n += S[0x100 | ((r >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n        n += S[0x300 | (r & 0xff)];\r\n        l ^= n ^ P[12];\r\n        //Iteration 6\r\n        n  = S[l >>> 24];\r\n        n += S[0x100 | ((l >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n        n += S[0x300 | (l & 0xff)];\r\n        r ^= n ^ P[13];\r\n        n  = S[r >>> 24];\r\n        n += S[0x100 | ((r >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n        n += S[0x300 | (r & 0xff)];\r\n        l ^= n ^ P[14];\r\n        //Iteration 7\r\n        n  = S[l >>> 24];\r\n        n += S[0x100 | ((l >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n        n += S[0x300 | (l & 0xff)];\r\n        r ^= n ^ P[15];\r\n        n  = S[r >>> 24];\r\n        n += S[0x100 | ((r >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n        n += S[0x300 | (r & 0xff)];\r\n        l ^= n ^ P[16];\r\n\r\n        lr[off] = r ^ P[BLOWFISH_NUM_ROUNDS + 1];\r\n        lr[off + 1] = l;\r\n        return lr;\r\n    }\r\n\r\n    /**\r\n     * @param {Array.<number>} data\r\n     * @param {number} offp\r\n     * @returns {{key: number, offp: number}}\r\n     * @inner\r\n     */\r\n    function _streamtoword(data, offp) {\r\n        for (var i = 0, word = 0; i < 4; ++i)\r\n            word = (word << 8) | (data[offp] & 0xff),\r\n            offp = (offp + 1) % data.length;\r\n        return { key: word, offp: offp };\r\n    }\r\n\r\n    /**\r\n     * @param {Array.<number>} key\r\n     * @param {Array.<number>} P\r\n     * @param {Array.<number>} S\r\n     * @inner\r\n     */\r\n    function _key(key, P, S) {\r\n        var offset = 0,\r\n            lr = [0, 0],\r\n            plen = P.length,\r\n            slen = S.length,\r\n            sw;\r\n        for (var i = 0; i < plen; i++)\r\n            sw = _streamtoword(key, offset),\r\n            offset = sw.offp,\r\n            P[i] = P[i] ^ sw.key;\r\n        for (i = 0; i < plen; i += 2)\r\n            lr = _encipher(lr, 0, P, S),\r\n            P[i] = lr[0],\r\n            P[i + 1] = lr[1];\r\n        for (i = 0; i < slen; i += 2)\r\n            lr = _encipher(lr, 0, P, S),\r\n            S[i] = lr[0],\r\n            S[i + 1] = lr[1];\r\n    }\r\n\r\n    /**\r\n     * Expensive key schedule Blowfish.\r\n     * @param {Array.<number>} data\r\n     * @param {Array.<number>} key\r\n     * @param {Array.<number>} P\r\n     * @param {Array.<number>} S\r\n     * @inner\r\n     */\r\n    function _ekskey(data, key, P, S) {\r\n        var offp = 0,\r\n            lr = [0, 0],\r\n            plen = P.length,\r\n            slen = S.length,\r\n            sw;\r\n        for (var i = 0; i < plen; i++)\r\n            sw = _streamtoword(key, offp),\r\n            offp = sw.offp,\r\n            P[i] = P[i] ^ sw.key;\r\n        offp = 0;\r\n        for (i = 0; i < plen; i += 2)\r\n            sw = _streamtoword(data, offp),\r\n            offp = sw.offp,\r\n            lr[0] ^= sw.key,\r\n            sw = _streamtoword(data, offp),\r\n            offp = sw.offp,\r\n            lr[1] ^= sw.key,\r\n            lr = _encipher(lr, 0, P, S),\r\n            P[i] = lr[0],\r\n            P[i + 1] = lr[1];\r\n        for (i = 0; i < slen; i += 2)\r\n            sw = _streamtoword(data, offp),\r\n            offp = sw.offp,\r\n            lr[0] ^= sw.key,\r\n            sw = _streamtoword(data, offp),\r\n            offp = sw.offp,\r\n            lr[1] ^= sw.key,\r\n            lr = _encipher(lr, 0, P, S),\r\n            S[i] = lr[0],\r\n            S[i + 1] = lr[1];\r\n    }\r\n\r\n    /**\r\n     * Internaly crypts a string.\r\n     * @param {Array.<number>} b Bytes to crypt\r\n     * @param {Array.<number>} salt Salt bytes to use\r\n     * @param {number} rounds Number of rounds\r\n     * @param {function(Error, Array.<number>=)=} callback Callback receiving the error, if any, and the resulting bytes. If\r\n     *  omitted, the operation will be performed synchronously.\r\n     *  @param {function(number)=} progressCallback Callback called with the current progress\r\n     * @returns {!Array.<number>|undefined} Resulting bytes if callback has been omitted, otherwise `undefined`\r\n     * @inner\r\n     */\r\n    function _crypt(b, salt, rounds, callback, progressCallback) {\r\n        var cdata = C_ORIG.slice(),\r\n            clen = cdata.length,\r\n            err;\r\n\r\n        // Validate\r\n        if (rounds < 4 || rounds > 31) {\r\n            err = Error(\"Illegal number of rounds (4-31): \"+rounds);\r\n            if (callback) {\r\n                nextTick(callback.bind(this, err));\r\n                return;\r\n            } else\r\n                throw err;\r\n        }\r\n        if (salt.length !== BCRYPT_SALT_LEN) {\r\n            err =Error(\"Illegal salt length: \"+salt.length+\" != \"+BCRYPT_SALT_LEN);\r\n            if (callback) {\r\n                nextTick(callback.bind(this, err));\r\n                return;\r\n            } else\r\n                throw err;\r\n        }\r\n        rounds = (1 << rounds) >>> 0;\r\n\r\n        var P, S, i = 0, j;\r\n\r\n        //Use typed arrays when available - huge speedup!\r\n        if (Int32Array) {\r\n            P = new Int32Array(P_ORIG);\r\n            S = new Int32Array(S_ORIG);\r\n        } else {\r\n            P = P_ORIG.slice();\r\n            S = S_ORIG.slice();\r\n        }\r\n\r\n        _ekskey(salt, b, P, S);\r\n\r\n        /**\r\n         * Calcualtes the next round.\r\n         * @returns {Array.<number>|undefined} Resulting array if callback has been omitted, otherwise `undefined`\r\n         * @inner\r\n         */\r\n        function next() {\r\n            if (progressCallback)\r\n                progressCallback(i / rounds);\r\n            if (i < rounds) {\r\n                var start = Date.now();\r\n                for (; i < rounds;) {\r\n                    i = i + 1;\r\n                    _key(b, P, S);\r\n                    _key(salt, P, S);\r\n                    if (Date.now() - start > MAX_EXECUTION_TIME)\r\n                        break;\r\n                }\r\n            } else {\r\n                for (i = 0; i < 64; i++)\r\n                    for (j = 0; j < (clen >> 1); j++)\r\n                        _encipher(cdata, j << 1, P, S);\r\n                var ret = [];\r\n                for (i = 0; i < clen; i++)\r\n                    ret.push(((cdata[i] >> 24) & 0xff) >>> 0),\r\n                    ret.push(((cdata[i] >> 16) & 0xff) >>> 0),\r\n                    ret.push(((cdata[i] >> 8) & 0xff) >>> 0),\r\n                    ret.push((cdata[i] & 0xff) >>> 0);\r\n                if (callback) {\r\n                    callback(null, ret);\r\n                    return;\r\n                } else\r\n                    return ret;\r\n            }\r\n            if (callback)\r\n                nextTick(next);\r\n        }\r\n\r\n        // Async\r\n        if (typeof callback !== 'undefined') {\r\n            next();\r\n\r\n            // Sync\r\n        } else {\r\n            var res;\r\n            while (true)\r\n                if (typeof(res = next()) !== 'undefined')\r\n                    return res || [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Internally hashes a string.\r\n     * @param {string} s String to hash\r\n     * @param {?string} salt Salt to use, actually never null\r\n     * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting hash. If omitted,\r\n     *  hashing is perormed synchronously.\r\n     *  @param {function(number)=} progressCallback Callback called with the current progress\r\n     * @returns {string|undefined} Resulting hash if callback has been omitted, otherwise `undefined`\r\n     * @inner\r\n     */\r\n    function _hash(s, salt, callback, progressCallback) {\r\n        var err;\r\n        if (typeof s !== 'string' || typeof salt !== 'string') {\r\n            err = Error(\"Invalid string / salt: Not a string\");\r\n            if (callback) {\r\n                nextTick(callback.bind(this, err));\r\n                return;\r\n            }\r\n            else\r\n                throw err;\r\n        }\r\n\r\n        // Validate the salt\r\n        var minor, offset;\r\n        if (salt.charAt(0) !== '$' || salt.charAt(1) !== '2') {\r\n            err = Error(\"Invalid salt version: \"+salt.substring(0,2));\r\n            if (callback) {\r\n                nextTick(callback.bind(this, err));\r\n                return;\r\n            }\r\n            else\r\n                throw err;\r\n        }\r\n        if (salt.charAt(2) === '$')\r\n            minor = String.fromCharCode(0),\r\n            offset = 3;\r\n        else {\r\n            minor = salt.charAt(2);\r\n            if ((minor !== 'a' && minor !== 'b' && minor !== 'y') || salt.charAt(3) !== '$') {\r\n                err = Error(\"Invalid salt revision: \"+salt.substring(2,4));\r\n                if (callback) {\r\n                    nextTick(callback.bind(this, err));\r\n                    return;\r\n                } else\r\n                    throw err;\r\n            }\r\n            offset = 4;\r\n        }\r\n\r\n        // Extract number of rounds\r\n        if (salt.charAt(offset + 2) > '$') {\r\n            err = Error(\"Missing salt rounds\");\r\n            if (callback) {\r\n                nextTick(callback.bind(this, err));\r\n                return;\r\n            } else\r\n                throw err;\r\n        }\r\n        var r1 = parseInt(salt.substring(offset, offset + 1), 10) * 10,\r\n            r2 = parseInt(salt.substring(offset + 1, offset + 2), 10),\r\n            rounds = r1 + r2,\r\n            real_salt = salt.substring(offset + 3, offset + 25);\r\n        s += minor >= 'a' ? \"\\x00\" : \"\";\r\n\r\n        var passwordb = stringToBytes(s),\r\n            saltb = base64_decode(real_salt, BCRYPT_SALT_LEN);\r\n\r\n        /**\r\n         * Finishes hashing.\r\n         * @param {Array.<number>} bytes Byte array\r\n         * @returns {string}\r\n         * @inner\r\n         */\r\n        function finish(bytes) {\r\n            var res = [];\r\n            res.push(\"$2\");\r\n            if (minor >= 'a')\r\n                res.push(minor);\r\n            res.push(\"$\");\r\n            if (rounds < 10)\r\n                res.push(\"0\");\r\n            res.push(rounds.toString());\r\n            res.push(\"$\");\r\n            res.push(base64_encode(saltb, saltb.length));\r\n            res.push(base64_encode(bytes, C_ORIG.length * 4 - 1));\r\n            return res.join('');\r\n        }\r\n\r\n        // Sync\r\n        if (typeof callback == 'undefined')\r\n            return finish(_crypt(passwordb, saltb, rounds));\r\n\r\n        // Async\r\n        else {\r\n            _crypt(passwordb, saltb, rounds, function(err, bytes) {\r\n                if (err)\r\n                    callback(err, null);\r\n                else\r\n                    callback(null, finish(bytes));\r\n            }, progressCallback);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Encodes a byte array to base64 with up to len bytes of input, using the custom bcrypt alphabet.\r\n     * @function\r\n     * @param {!Array.<number>} b Byte array\r\n     * @param {number} len Maximum input length\r\n     * @returns {string}\r\n     * @expose\r\n     */\r\n    bcrypt.encodeBase64 = base64_encode;\r\n\r\n    /**\r\n     * Decodes a base64 encoded string to up to len bytes of output, using the custom bcrypt alphabet.\r\n     * @function\r\n     * @param {string} s String to decode\r\n     * @param {number} len Maximum output length\r\n     * @returns {!Array.<number>}\r\n     * @expose\r\n     */\r\n    bcrypt.decodeBase64 = base64_decode;\r\n\r\n    return bcrypt;\r\n}));\r\n", "// Database utilities for StriveTrack\n\nexport async function getUserByEmail(email, env) {\n    return await env.DB.prepare('SELECT * FROM users WHERE email = ?')\n        .bind(email).first();\n}\n\nexport async function getUserById(id, env) {\n    return await env.DB.prepare('SELECT * FROM users WHERE id = ?')\n        .bind(id).first();\n}\n\nexport async function createUser(userData, env) {\n    const { v4: uuidv4 } = await import('uuid');\n    const bcrypt = await import('bcryptjs');\n    \n    const userId = uuidv4();\n    const hashedPassword = await bcrypt.hash(userData.password, 12);\n    \n    // Set admin role for specific email\n    const role = userData.email === env.ADMIN_EMAIL ? 'admin' : 'user';\n    \n    await env.DB.prepare(`\n        INSERT INTO users (id, email, password_hash, role, points)\n        VALUES (?, ?, ?, ?, 0)\n    `).bind(userId, userData.email, hashedPassword, role).run();\n    \n    return await getUserById(userId, env);\n}\n\nexport async function validatePassword(password, hash) {\n    const bcrypt = await import('bcryptjs');\n    return await bcrypt.compare(password, hash);\n}\n\nexport async function updateUserPoints(userId, points, env) {\n    await env.DB.prepare('UPDATE users SET points = points + ? WHERE id = ?')\n        .bind(points, userId).run();\n}\n\nexport async function getUserHabits(userId, env) {\n    const result = await env.DB.prepare(`\n        SELECT h.*, \n               COUNT(hc.id) as total_completions,\n               COUNT(CASE WHEN date(hc.completed_at) = date('now') THEN 1 END) as today_completed\n        FROM habits h\n        LEFT JOIN habit_completions hc ON h.id = hc.habit_id\n        WHERE h.user_id = ?\n        GROUP BY h.id\n        ORDER BY h.created_at DESC\n    `).bind(userId).all();\n    return result.results || [];\n}\n\nexport async function createHabit(habitData, env) {\n    const { v4: uuidv4 } = await import('uuid');\n    \n    const habitId = uuidv4();\n    await env.DB.prepare(`\n        INSERT INTO habits (id, user_id, name, description, target_frequency, color, weekly_target)\n        VALUES (?, ?, ?, ?, ?, ?, ?)\n    `).bind(\n        habitId, \n        habitData.user_id, \n        habitData.name, \n        habitData.description || '', \n        habitData.target_frequency || 1,\n        habitData.color || '#667eea',\n        habitData.weekly_target || 7\n    ).run();\n    \n    return habitId;\n}\n\nexport async function markHabitComplete(habitId, userId, notes, env) {\n    const { v4: uuidv4 } = await import('uuid');\n    \n    // Check if already completed today\n    const existingCompletion = await env.DB.prepare(`\n        SELECT id FROM habit_completions \n        WHERE habit_id = ? AND user_id = ? AND date(completed_at) = date('now')\n    `).bind(habitId, userId).first();\n    \n    if (existingCompletion) {\n        return { error: 'Habit already completed today' };\n    }\n    \n    const completionId = uuidv4();\n    await env.DB.prepare(`\n        INSERT INTO habit_completions (id, habit_id, user_id, notes)\n        VALUES (?, ?, ?, ?)\n    `).bind(completionId, habitId, userId, notes || '').run();\n    \n    // Award points\n    await updateUserPoints(userId, 10, env);\n    \n    return { success: true, completionId, points: 10 };\n}\n\nexport async function getUserMedia(userId, env) {\n    const result = await env.DB.prepare(`\n        SELECT * FROM media_uploads \n        WHERE user_id = ? \n        ORDER BY uploaded_at DESC\n    `).bind(userId).all();\n    return result.results || [];\n}\n\nexport async function getAllMedia(env) {\n    const result = await env.DB.prepare(`\n        SELECT m.*, u.email as user_email\n        FROM media_uploads m\n        JOIN users u ON m.user_id = u.id\n        ORDER BY m.uploaded_at DESC\n    `).all();\n    return result.results || [];\n}\n\nexport async function getUserAchievements(userId, env) {\n    const result = await env.DB.prepare(`\n        SELECT a.*, ua.earned_at\n        FROM achievements a\n        LEFT JOIN user_achievements ua ON a.id = ua.achievement_id AND ua.user_id = ?\n        ORDER BY ua.earned_at DESC, a.points ASC\n    `).bind(userId).all();\n    return result.results || [];\n}\n\nexport async function checkAndAwardAchievements(userId, env) {\n    // Import and use the enhanced achievement system\n    try {\n        const { checkAndAwardAchievements: enhancedCheck } = await import('./achievements.js');\n        return await enhancedCheck(userId, 'general', {}, env);\n    } catch (error) {\n        console.error('Enhanced achievement check error:', error);\n        return [];\n    }\n}", "// Admin media management endpoint for StriveTrack\nimport { requireAdmin } from '../../utils/auth.js';\nimport { getAllMedia } from '../../utils/database.js';\n\nexport async function onRequestGet(context) {\n    const { request, env } = context;\n    \n    try {\n        const authResult = await requireAdmin(request, env);\n        if (authResult instanceof Response) return authResult;\n        \n        const media = await getAllMedia(env);\n        \n        // Add URLs for admin access\n        const mediaWithUrls = media.map(item => ({\n            ...item,\n            url: `/api/media/file/${item.id}`,\n            download_url: `/api/admin/media/download/${item.id}`\n        }));\n        \n        return new Response(JSON.stringify({ media: mediaWithUrls }), {\n            status: 200,\n            headers: { 'Content-Type': 'application/json' }\n        });\n        \n    } catch (error) {\n        console.error('Get admin media error:', error);\n        return new Response(JSON.stringify({ \n            error: 'Internal server error' \n        }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n}\n\nexport async function onRequestPost(context) {\n    const { request, env } = context;\n    \n    try {\n        const authResult = await requireAdmin(request, env);\n        if (authResult instanceof Response) return authResult;\n        \n        const body = await request.json();\n        const { mediaId, action } = body;\n        \n        if (!mediaId || !action) {\n            return new Response(JSON.stringify({ \n                error: 'Media ID and action are required' \n            }), {\n                status: 400,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n        \n        const media = await env.DB.prepare(\n            'SELECT * FROM media_uploads WHERE id = ?'\n        ).bind(mediaId).first();\n        \n        if (!media) {\n            return new Response(JSON.stringify({ \n                error: 'Media not found' \n            }), {\n                status: 404,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n        \n        switch (action) {\n            case 'flag':\n                await env.DB.prepare(\n                    'UPDATE media_uploads SET is_flagged = 1 WHERE id = ?'\n                ).bind(mediaId).run();\n                return new Response(JSON.stringify({\n                    message: 'Media flagged successfully'\n                }), {\n                    status: 200,\n                    headers: { 'Content-Type': 'application/json' }\n                });\n                \n            case 'unflag':\n                await env.DB.prepare(\n                    'UPDATE media_uploads SET is_flagged = 0 WHERE id = ?'\n                ).bind(mediaId).run();\n                return new Response(JSON.stringify({\n                    message: 'Media unflagged successfully'\n                }), {\n                    status: 200,\n                    headers: { 'Content-Type': 'application/json' }\n                });\n                \n            case 'delete':\n                // Delete from R2\n                try {\n                    await env.MEDIA_BUCKET.delete(media.r2_key);\n                } catch (error) {\n                    console.error('Error deleting from R2:', error);\n                }\n                \n                // Delete from database\n                await env.DB.prepare('DELETE FROM media_uploads WHERE id = ?')\n                    .bind(mediaId).run();\n                \n                return new Response(JSON.stringify({\n                    message: 'Media deleted successfully'\n                }), {\n                    status: 200,\n                    headers: { 'Content-Type': 'application/json' }\n                });\n                \n            default:\n                return new Response(JSON.stringify({ \n                    error: 'Invalid action. Use: flag, unflag, or delete' \n                }), {\n                    status: 400,\n                    headers: { 'Content-Type': 'application/json' }\n                });\n        }\n        \n    } catch (error) {\n        console.error('Admin media action error:', error);\n        return new Response(JSON.stringify({ \n            error: 'Internal server error' \n        }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n}", "// Admin users management endpoint for StriveTrack\nimport { requireAdmin } from '../../utils/auth.js';\n\nexport async function onRequestGet(context) {\n    const { request, env } = context;\n    \n    try {\n        const authResult = await requireAdmin(request, env);\n        if (authResult instanceof Response) return authResult;\n        \n        // Get all users (excluding admin user from the list)\n        const users = await env.DB.prepare(`\n            SELECT u.id, u.email, u.role, u.points, u.created_at,\n                   COUNT(DISTINCT h.id) as total_habits,\n                   COUNT(DISTINCT hc.id) as total_completions,\n                   COUNT(DISTINCT m.id) as total_media\n            FROM users u\n            LEFT JOIN habits h ON u.id = h.user_id\n            LEFT JOIN habit_completions hc ON u.id = hc.user_id\n            LEFT JOIN media_uploads m ON u.id = m.user_id\n            WHERE u.role != 'admin'\n            GROUP BY u.id, u.email, u.role, u.points, u.created_at\n            ORDER BY u.created_at DESC\n        `).all();\n        \n        // Get platform statistics\n        const stats = await env.DB.prepare(`\n            SELECT \n                (SELECT COUNT(*) FROM users WHERE role != 'admin') as total_users,\n                (SELECT COUNT(*) FROM habits) as total_habits,\n                (SELECT COUNT(*) FROM habit_completions) as total_completions,\n                (SELECT COUNT(*) FROM media_uploads) as total_media,\n                (SELECT COUNT(*) FROM media_uploads WHERE is_flagged = 1) as flagged_media\n        `).first();\n        \n        return new Response(JSON.stringify({ \n            users, \n            stats\n        }), {\n            status: 200,\n            headers: { 'Content-Type': 'application/json' }\n        });\n        \n    } catch (error) {\n        console.error('Get admin users error:', error);\n        return new Response(JSON.stringify({ \n            error: 'Internal server error' \n        }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n}\n\nexport async function onRequestDelete(context) {\n    const { request, env } = context;\n    \n    try {\n        const authResult = await requireAdmin(request, env);\n        if (authResult instanceof Response) return authResult;\n        \n        const url = new URL(request.url);\n        const userId = url.searchParams.get('userId');\n        \n        if (!userId) {\n            return new Response(JSON.stringify({ \n                error: 'User ID is required' \n            }), {\n                status: 400,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n        \n        // Check if user exists and is not admin\n        const user = await env.DB.prepare(\n            'SELECT id, role FROM users WHERE id = ?'\n        ).bind(userId).first();\n        \n        if (!user) {\n            return new Response(JSON.stringify({ \n                error: 'User not found' \n            }), {\n                status: 404,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n        \n        if (user.role === 'admin') {\n            return new Response(JSON.stringify({ \n                error: 'Cannot delete admin user' \n            }), {\n                status: 403,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n        \n        // Delete user media from R2\n        const userMedia = await env.DB.prepare(\n            'SELECT r2_key FROM media_uploads WHERE user_id = ?'\n        ).bind(userId).all();\n        \n        for (const media of userMedia) {\n            try {\n                await env.MEDIA_BUCKET.delete(media.r2_key);\n            } catch (error) {\n                console.error('Error deleting R2 object:', error);\n            }\n        }\n        \n        // Delete user (cascade will handle related records)\n        await env.DB.prepare('DELETE FROM users WHERE id = ?').bind(userId).run();\n        \n        return new Response(JSON.stringify({\n            message: 'User deleted successfully'\n        }), {\n            status: 200,\n            headers: { 'Content-Type': 'application/json' }\n        });\n        \n    } catch (error) {\n        console.error('Delete user error:', error);\n        return new Response(JSON.stringify({ \n            error: 'Internal server error' \n        }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n}", "// Login endpoint for StriveTrack\nimport { getUserByEmail, validatePassword } from '../../utils/database.js';\nimport { createSession, cleanupExpiredSessions } from '../../utils/auth.js';\n\nexport async function onRequestPost(context) {\n    const { request, env } = context;\n    \n    try {\n        const body = await request.json();\n        const { email, password } = body;\n        \n        if (!email || !password) {\n            return new Response(JSON.stringify({ \n                error: 'Email and password are required' \n            }), {\n                status: 400,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n\n        // Clean up expired sessions\n        await cleanupExpiredSessions(env);\n        \n        // Get user by email\n        const user = await getUserByEmail(email, env);\n        if (!user) {\n            return new Response(JSON.stringify({ \n                error: 'Invalid email or password' \n            }), {\n                status: 401,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n        \n        // Validate password\n        const isValidPassword = await validatePassword(password, user.password_hash);\n        if (!isValidPassword) {\n            return new Response(JSON.stringify({ \n                error: 'Invalid email or password' \n            }), {\n                status: 401,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n        \n        // Create session\n        const sessionId = await createSession(user.id, env);\n        \n        // Return success response with session and user data\n        return new Response(JSON.stringify({\n            sessionId,\n            user: {\n                id: user.id,\n                email: user.email,\n                role: user.role,\n                points: user.points\n            }\n        }), {\n            status: 200,\n            headers: { 'Content-Type': 'application/json' }\n        });\n        \n    } catch (error) {\n        console.error('Login error:', error);\n        return new Response(JSON.stringify({ \n            error: 'Internal server error' \n        }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n}", "// Logout endpoint for StriveTrack\nimport { deleteSession } from '../../utils/auth.js';\n\nexport async function onRequestPost(context) {\n    const { request, env } = context;\n    \n    try {\n        const sessionId = request.headers.get('x-session-id');\n        \n        if (sessionId) {\n            await deleteSession(sessionId, env);\n        }\n        \n        return new Response(JSON.stringify({\n            message: 'Logged out successfully'\n        }), {\n            status: 200,\n            headers: { 'Content-Type': 'application/json' }\n        });\n        \n    } catch (error) {\n        console.error('Logout error:', error);\n        return new Response(JSON.stringify({ \n            error: 'Internal server error' \n        }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n}", "// Registration endpoint for StriveTrack\nimport { getUserByEmail, createUser } from '../../utils/database.js';\nimport { createSession } from '../../utils/auth.js';\n\nexport async function onRequestPost(context) {\n    const { request, env } = context;\n    \n    try {\n        const body = await request.json();\n        const { email, password } = body;\n        \n        if (!email || !password) {\n            return new Response(JSON.stringify({ \n                error: 'Email and password are required' \n            }), {\n                status: 400,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n\n        // Validate email format\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailRegex.test(email)) {\n            return new Response(JSON.stringify({ \n                error: 'Invalid email format' \n            }), {\n                status: 400,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n        \n        // Validate password length\n        if (password.length < 6) {\n            return new Response(JSON.stringify({ \n                error: 'Password must be at least 6 characters' \n            }), {\n                status: 400,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n        \n        // Check if user already exists\n        const existingUser = await getUserByEmail(email, env);\n        if (existingUser) {\n            return new Response(JSON.stringify({ \n                error: 'Email already registered' \n            }), {\n                status: 400,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n        \n        // Create new user\n        const user = await createUser({ email, password }, env);\n        \n        // Create session for automatic login\n        const sessionId = await createSession(user.id, env);\n        \n        // Return success response\n        return new Response(JSON.stringify({\n            message: 'User registered successfully',\n            sessionId,\n            user: {\n                id: user.id,\n                email: user.email,\n                role: user.role,\n                points: user.points\n            }\n        }), {\n            status: 201,\n            headers: { 'Content-Type': 'application/json' }\n        });\n        \n    } catch (error) {\n        console.error('Registration error:', error);\n        return new Response(JSON.stringify({ \n            error: 'Internal server error' \n        }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n}", "// Session validation endpoint for StriveTrack\nimport { getCurrentUser } from '../../utils/auth.js';\n\nexport async function onRequestGet(context) {\n    const { request, env } = context;\n    \n    try {\n        const user = await getCurrentUser(request, env);\n        \n        if (!user) {\n            return new Response(JSON.stringify({ \n                error: 'Invalid session' \n            }), {\n                status: 401,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n        \n        return new Response(JSON.stringify({\n            user: {\n                id: user.id,\n                email: user.email,\n                role: user.role,\n                points: user.points\n            }\n        }), {\n            status: 200,\n            headers: { 'Content-Type': 'application/json' }\n        });\n        \n    } catch (error) {\n        console.error('Session validation error:', error);\n        return new Response(JSON.stringify({ \n            error: 'Internal server error' \n        }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n}", "export async function onRequestGet({ request, env }) {\n    try {\n        const sessionId = request.headers.get('x-session-id');\n        if (!sessionId) {\n            return new Response(JSON.stringify({ error: 'No session provided' }), {\n                status: 401,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n\n        // Validate session\n        const sessionQuery = await env.DB.prepare(\n            'SELECT user_id FROM sessions WHERE id = ? AND expires_at > datetime(\"now\")'\n        ).bind(sessionId).first();\n\n        if (!sessionQuery) {\n            return new Response(JSON.stringify({ error: 'Invalid or expired session' }), {\n                status: 401,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n\n        const userId = sessionQuery.user_id;\n        const today = new Date().toISOString().split('T')[0]; // YYYY-MM-DD format\n\n        // Get today's challenges with user progress\n        const challenges = await env.DB.prepare(`\n            SELECT \n                dc.*,\n                COALESCE(udc.progress_count, 0) as current_progress,\n                COALESCE(udc.is_completed, 0) as is_completed,\n                COALESCE(udc.points_earned, 0) as points_earned,\n                udc.completed_at,\n                CASE \n                    WHEN udc.is_completed = 1 THEN 100\n                    ELSE ROUND((CAST(COALESCE(udc.progress_count, 0) AS FLOAT) / dc.requirement_value) * 100)\n                END as progress_percentage\n            FROM daily_challenges dc\n            LEFT JOIN user_daily_challenges udc ON dc.id = udc.challenge_id \n                AND udc.user_id = ? \n                AND udc.challenge_date = ?\n            WHERE dc.is_active = 1\n            ORDER BY \n                udc.is_completed ASC,\n                CASE dc.rarity \n                    WHEN 'legendary' THEN 4\n                    WHEN 'epic' THEN 3 \n                    WHEN 'rare' THEN 2\n                    ELSE 1\n                END DESC,\n                dc.points_reward DESC\n        `).bind(userId, today).all();\n\n        // Get user's current streaks\n        const streaks = await env.DB.prepare(`\n            SELECT * FROM user_streaks WHERE user_id = ?\n        `).bind(userId).all();\n\n        // Calculate overall daily challenge stats\n        const totalChallenges = challenges.results?.length || 0;\n        const completedChallenges = challenges.results?.filter(c => c.is_completed).length || 0;\n        const totalPointsEarned = challenges.results?.reduce((sum, c) => sum + c.points_earned, 0) || 0;\n        const completionPercentage = totalChallenges > 0 ? Math.round((completedChallenges / totalChallenges) * 100) : 0;\n\n        return new Response(JSON.stringify({\n            challenges: challenges.results || [],\n            streaks: streaks.results || [],\n            stats: {\n                total_challenges: totalChallenges,\n                completed_challenges: completedChallenges,\n                completion_percentage: completionPercentage,\n                points_earned_today: totalPointsEarned\n            },\n            date: today\n        }), {\n            status: 200,\n            headers: { 'Content-Type': 'application/json' }\n        });\n\n    } catch (error) {\n        console.error('Daily challenges error:', error);\n        return new Response(JSON.stringify({ error: 'Failed to load daily challenges' }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n}", "// Habit completion endpoint for StriveTrack\nimport { requireAuth } from '../../utils/auth.js';\nimport { markHabitComplete, checkAndAwardAchievements } from '../../utils/database.js';\n\nexport async function onRequestPost(context) {\n    const { request, env } = context;\n    \n    try {\n        const authResult = await requireAuth(request, env);\n        if (authResult instanceof Response) return authResult;\n        \n        const user = authResult;\n        const body = await request.json();\n        const { habitId, notes } = body;\n        \n        if (!habitId) {\n            return new Response(JSON.stringify({ \n                error: 'Habit ID is required' \n            }), {\n                status: 400,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n        \n        // Verify the habit belongs to the user\n        const habit = await env.DB.prepare(\n            'SELECT id FROM habits WHERE id = ? AND user_id = ?'\n        ).bind(habitId, user.id).first();\n        \n        if (!habit) {\n            return new Response(JSON.stringify({ \n                error: 'Habit not found' \n            }), {\n                status: 404,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n        \n        const result = await markHabitComplete(habitId, user.id, notes, env);\n        \n        if (result.error) {\n            return new Response(JSON.stringify({ \n                error: result.error \n            }), {\n                status: 400,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n        \n        // Check and award achievements with context\n        const { checkAndAwardAchievements: enhancedCheck } = await import('../../utils/achievements.js');\n        const newAchievements = await enhancedCheck(user.id, 'habit_completion', {\n            habitId,\n            time: new Date().toISOString(),\n            notes\n        }, env);\n        \n        return new Response(JSON.stringify({\n            message: 'Habit completed successfully',\n            points: result.points,\n            newAchievements\n        }), {\n            status: 200,\n            headers: { 'Content-Type': 'application/json' }\n        });\n        \n    } catch (error) {\n        console.error('Complete habit error:', error);\n        return new Response(JSON.stringify({ \n            error: 'Internal server error' \n        }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n}", "// Weekly habit tracking endpoint for StriveTrack\nimport { requireAuth } from '../../utils/auth.js';\n\n// Get weekly completions for a specific week\nexport async function onRequestGet(context) {\n    const { request, env } = context;\n    \n    try {\n        const authResult = await requireAuth(request, env);\n        if (authResult instanceof Response) return authResult;\n        \n        const user = authResult;\n        const url = new URL(request.url);\n        const weekStart = url.searchParams.get('weekStart') || getCurrentWeekStart();\n        \n        // Get all habits for user with their weekly completions\n        const habitsResult = await env.DB.prepare(`\n            SELECT h.*, h.weekly_target\n            FROM habits h\n            WHERE h.user_id = ?\n            ORDER BY h.created_at DESC\n        `).bind(user.id).all();\n        \n        const habits = habitsResult.results || [];\n        \n        // Get weekly completions for this week\n        const completionsResult = await env.DB.prepare(`\n            SELECT * FROM weekly_habit_completions\n            WHERE user_id = ? AND week_start_date = ?\n        `).bind(user.id, weekStart).all();\n        \n        const completions = completionsResult.results || [];\n        \n        // Combine habits with their weekly completions\n        const habitsWithWeekly = habits.map(habit => {\n            const weekCompletions = completions.filter(c => c.habit_id === habit.id);\n            const completedDays = weekCompletions.map(c => c.day_of_week);\n            \n            return {\n                ...habit,\n                weekStart,\n                completedDays,\n                weekCompletions: weekCompletions,\n                completedCount: completedDays.length,\n                targetCount: habit.weekly_target || 7\n            };\n        });\n        \n        return new Response(JSON.stringify({ \n            habits: habitsWithWeekly,\n            weekStart,\n            weekEnd: getWeekEnd(weekStart)\n        }), {\n            status: 200,\n            headers: { 'Content-Type': 'application/json' }\n        });\n        \n    } catch (error) {\n        console.error('Get weekly habits error:', error);\n        return new Response(JSON.stringify({ \n            error: 'Internal server error' \n        }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n}\n\n// Toggle completion for a specific day\nexport async function onRequestPost(context) {\n    const { request, env } = context;\n    \n    try {\n        const authResult = await requireAuth(request, env);\n        if (authResult instanceof Response) return authResult;\n        \n        const user = authResult;\n        const body = await request.json();\n        const { habitId, date, dayOfWeek } = body;\n        \n        if (!habitId || !date || dayOfWeek === undefined) {\n            return new Response(JSON.stringify({ \n                error: 'Habit ID, date, and dayOfWeek are required' \n            }), {\n                status: 400,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n        \n        // Verify habit belongs to user\n        const habit = await env.DB.prepare(\n            'SELECT id FROM habits WHERE id = ? AND user_id = ?'\n        ).bind(habitId, user.id).first();\n        \n        if (!habit) {\n            return new Response(JSON.stringify({ \n                error: 'Habit not found' \n            }), {\n                status: 404,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n        \n        const weekStart = getWeekStartFromDate(date);\n        \n        // Check if completion already exists\n        const existing = await env.DB.prepare(`\n            SELECT id FROM weekly_habit_completions \n            WHERE habit_id = ? AND completion_date = ?\n        `).bind(habitId, date).first();\n        \n        if (existing) {\n            // Remove completion (toggle off)\n            await env.DB.prepare(`\n                DELETE FROM weekly_habit_completions WHERE id = ?\n            `).bind(existing.id).run();\n            \n            return new Response(JSON.stringify({\n                message: 'Completion removed',\n                completed: false\n            }), {\n                status: 200,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        } else {\n            // Add completion (toggle on)\n            const { v4: uuidv4 } = await import('uuid');\n            const completionId = uuidv4();\n            \n            await env.DB.prepare(`\n                INSERT INTO weekly_habit_completions \n                (id, habit_id, user_id, completion_date, day_of_week, week_start_date)\n                VALUES (?, ?, ?, ?, ?, ?)\n            `).bind(completionId, habitId, user.id, date, dayOfWeek, weekStart).run();\n            \n            // Award points for completion\n            await env.DB.prepare('UPDATE users SET points = points + 5 WHERE id = ?')\n                .bind(user.id).run();\n            \n            return new Response(JSON.stringify({\n                message: 'Completion added',\n                completed: true,\n                points: 5\n            }), {\n                status: 200,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n        \n    } catch (error) {\n        console.error('Toggle weekly completion error:', error);\n        return new Response(JSON.stringify({ \n            error: 'Internal server error' \n        }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n}\n\nfunction getCurrentWeekStart() {\n    const now = new Date();\n    const sunday = new Date(now);\n    sunday.setDate(now.getDate() - now.getDay());\n    return sunday.toISOString().split('T')[0];\n}\n\nfunction getWeekStartFromDate(dateStr) {\n    const date = new Date(dateStr);\n    const sunday = new Date(date);\n    sunday.setDate(date.getDate() - date.getDay());\n    return sunday.toISOString().split('T')[0];\n}\n\nfunction getWeekEnd(weekStartStr) {\n    const weekStart = new Date(weekStartStr);\n    const saturday = new Date(weekStart);\n    saturday.setDate(weekStart.getDate() + 6);\n    return saturday.toISOString().split('T')[0];\n}", "export async function onRequestPost({ request, env }) {\n    try {\n        const sessionId = request.headers.get('x-session-id');\n        \n        if (!sessionId) {\n            return new Response(JSON.stringify({ error: 'No session provided' }), {\n                status: 401,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n\n        // Validate session\n        const sessionQuery = await env.DB.prepare(\n            'SELECT user_id FROM sessions WHERE id = ? AND expires_at > datetime(\"now\")'\n        ).bind(sessionId).first();\n\n        if (!sessionQuery) {\n            return new Response(JSON.stringify({ error: 'Invalid or expired session' }), {\n                status: 401,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n\n        const userId = sessionQuery.user_id;\n        const formData = await request.formData();\n        const file = formData.get('file');\n        const videoType = formData.get('video_type') || 'progress'; // 'progress', 'before', 'after', 'general'\n        const tags = formData.get('tags') || '[]';\n        \n        if (!file) {\n            return new Response(JSON.stringify({ error: 'No video file provided' }), {\n                status: 400,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n\n        // Validate file type\n        if (!file.type.startsWith('video/')) {\n            return new Response(JSON.stringify({ error: 'File must be a video' }), {\n                status: 400,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n\n        // Generate unique filename\n        const { v4: uuidv4 } = await import('uuid');\n        const fileExtension = file.name.split('.').pop();\n        const fileName = `videos/${userId}/${Date.now()}-${uuidv4()}.${fileExtension}`;\n\n        try {\n            // Upload to R2\n            await env.MEDIA_BUCKET.put(fileName, file.stream(), {\n                httpMetadata: {\n                    contentType: file.type,\n                },\n                customMetadata: {\n                    userId: userId,\n                    videoType: videoType,\n                    uploadDate: new Date().toISOString()\n                }\n            });\n\n            // Generate video URL\n            const videoUrl = `${env.MEDIA_BUCKET_URL || '/api/media/serve'}/${fileName}`;\n            \n            // Save video record to database\n            const today = new Date();\n            const uploadDate = today.toISOString().split('T')[0]; // YYYY-MM-DD\n            const weekNumber = getWeekNumber(today);\n            const monthYear = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}`;\n            \n            const videoId = uuidv4();\n            await env.DB.prepare(`\n                INSERT INTO user_video_uploads (\n                    id, user_id, video_url, video_type, upload_date, \n                    week_number, month_year, tags\n                ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)\n            `).bind(\n                videoId, userId, videoUrl, videoType, uploadDate,\n                weekNumber, monthYear, tags\n            ).run();\n\n            // Award points for video upload\n            const pointsEarned = videoType === 'before' || videoType === 'after' ? 50 : 25;\n            await env.DB.prepare(\n                'UPDATE users SET points = points + ?, weekly_points = weekly_points + ? WHERE id = ?'\n            ).bind(pointsEarned, pointsEarned, userId).run();\n\n            // Check for before/after video pairing\n            let beforeAfterPaired = false;\n            if (videoType === 'before' || videoType === 'after') {\n                const oppositeType = videoType === 'before' ? 'after' : 'before';\n                const pairVideo = await env.DB.prepare(`\n                    SELECT id FROM user_video_uploads \n                    WHERE user_id = ? AND video_type = ? \n                    AND upload_date >= date('now', '-60 days')\n                    ORDER BY upload_date DESC LIMIT 1\n                `).bind(userId, oppositeType).first();\n\n                if (pairVideo) {\n                    // Update both videos to mark as paired\n                    await env.DB.prepare(`\n                        UPDATE user_video_uploads \n                        SET is_before_after = 1, comparison_video_id = ?\n                        WHERE id = ?\n                    `).bind(pairVideo.id, videoId).run();\n                    \n                    await env.DB.prepare(`\n                        UPDATE user_video_uploads \n                        SET is_before_after = 1, comparison_video_id = ?\n                        WHERE id = ?\n                    `).bind(videoId, pairVideo.id).run();\n                    \n                    beforeAfterPaired = true;\n                }\n            }\n\n            // Trigger achievement checking (import the function)\n            try {\n                const { checkAndAwardAchievements } = await import('../../utils/achievements.js');\n                await checkAndAwardAchievements(userId, 'video_upload', { video_type: videoType }, env);\n            } catch (achievementError) {\n                console.error('Achievement check error:', achievementError);\n                // Don't fail the upload if achievements fail\n            }\n\n            return new Response(JSON.stringify({\n                message: 'Video uploaded successfully!',\n                video_id: videoId,\n                video_url: videoUrl,\n                points_earned: pointsEarned,\n                before_after_paired: beforeAfterPaired,\n                video_type: videoType\n            }), {\n                status: 200,\n                headers: { 'Content-Type': 'application/json' }\n            });\n\n        } catch (uploadError) {\n            console.error('Video upload error:', uploadError);\n            return new Response(JSON.stringify({ error: 'Failed to upload video' }), {\n                status: 500,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n\n    } catch (error) {\n        console.error('Video upload error:', error);\n        return new Response(JSON.stringify({ error: 'Failed to process video upload' }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n}\n\nexport async function onRequestGet({ request, env }) {\n    try {\n        const sessionId = request.headers.get('x-session-id');\n        \n        if (!sessionId) {\n            return new Response(JSON.stringify({ error: 'No session provided' }), {\n                status: 401,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n\n        const sessionQuery = await env.DB.prepare(\n            'SELECT user_id FROM sessions WHERE id = ? AND expires_at > datetime(\"now\")'\n        ).bind(sessionId).first();\n\n        if (!sessionQuery) {\n            return new Response(JSON.stringify({ error: 'Invalid or expired session' }), {\n                status: 401,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n\n        const userId = sessionQuery.user_id;\n        \n        // Get user's videos\n        const videos = await env.DB.prepare(`\n            SELECT \n                id, video_url, video_type, upload_date, tags,\n                is_before_after, comparison_video_id,\n                week_number, month_year\n            FROM user_video_uploads \n            WHERE user_id = ? \n            ORDER BY upload_date DESC\n        `).bind(userId).all();\n\n        // Group videos by type for stats\n        const videoStats = {\n            total: videos.results?.length || 0,\n            by_type: {},\n            this_month: 0,\n            this_week: 0,\n            before_after_pairs: 0\n        };\n\n        const today = new Date();\n        const thisMonth = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}`;\n        const thisWeek = getWeekNumber(today);\n\n        videos.results?.forEach(video => {\n            // Count by type\n            videoStats.by_type[video.video_type] = (videoStats.by_type[video.video_type] || 0) + 1;\n            \n            // Count this month\n            if (video.month_year === thisMonth) {\n                videoStats.this_month++;\n            }\n            \n            // Count this week\n            if (video.week_number === thisWeek) {\n                videoStats.this_week++;\n            }\n            \n            // Count before/after pairs\n            if (video.is_before_after) {\n                videoStats.before_after_pairs++;\n            }\n        });\n\n        return new Response(JSON.stringify({\n            videos: videos.results || [],\n            stats: videoStats\n        }), {\n            status: 200,\n            headers: { 'Content-Type': 'application/json' }\n        });\n\n    } catch (error) {\n        console.error('Get videos error:', error);\n        return new Response(JSON.stringify({ error: 'Failed to load videos' }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n}\n\n// Helper function to get week number\nfunction getWeekNumber(date) {\n    const firstDayOfYear = new Date(date.getFullYear(), 0, 1);\n    const pastDaysOfYear = (date - firstDayOfYear) / 86400000;\n    return Math.ceil((pastDaysOfYear + firstDayOfYear.getDay() + 1) / 7);\n}", "// Habit deletion endpoint for StriveTrack\nimport { requireAuth } from '../../utils/auth.js';\n\nexport async function onRequestDelete(context) {\n    const { request, env, params } = context;\n    \n    try {\n        const authResult = await requireAuth(request, env);\n        if (authResult instanceof Response) return authResult;\n        \n        const user = authResult;\n        const habitId = params.id;\n        \n        if (!habitId) {\n            return new Response(JSON.stringify({ \n                error: 'Habit ID is required' \n            }), {\n                status: 400,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n        \n        // Verify the habit belongs to the user\n        const habit = await env.DB.prepare(\n            'SELECT id FROM habits WHERE id = ? AND user_id = ?'\n        ).bind(habitId, user.id).first();\n        \n        if (!habit) {\n            return new Response(JSON.stringify({ \n                error: 'Habit not found or you do not have permission to delete it' \n            }), {\n                status: 404,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n        \n        // Delete habit completions first (foreign key constraint)\n        await env.DB.prepare('DELETE FROM habit_completions WHERE habit_id = ?')\n            .bind(habitId).run();\n            \n        // Delete the habit\n        await env.DB.prepare('DELETE FROM habits WHERE id = ? AND user_id = ?')\n            .bind(habitId, user.id).run();\n        \n        return new Response(JSON.stringify({\n            message: 'Habit deleted successfully'\n        }), {\n            status: 200,\n            headers: { 'Content-Type': 'application/json' }\n        });\n        \n    } catch (error) {\n        console.error('Delete habit error:', error);\n        return new Response(JSON.stringify({ \n            error: 'Internal server error' \n        }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n}", "// Enhanced Achievements API endpoint for StriveTrack\nimport { requireAuth } from '../../utils/auth.js';\n\nexport async function onRequestGet(context) {\n    const { request, env } = context;\n    \n    try {\n        const authResult = await requireAuth(request, env);\n        if (authResult instanceof Response) return authResult;\n        \n        const user = authResult;\n        \n        // Get all achievements with user completion status\n        const achievementsResult = await env.DB.prepare(`\n            SELECT \n                a.*,\n                ua.earned_at,\n                CASE WHEN ua.id IS NOT NULL THEN 1 ELSE 0 END as earned\n            FROM achievements a\n            LEFT JOIN user_achievements ua ON a.id = ua.achievement_id AND ua.user_id = ?\n            ORDER BY \n                a.category,\n                a.difficulty,\n                earned DESC,\n                a.points ASC\n        `).bind(user.id).all();\n        \n        const achievements = achievementsResult.results || [];\n        \n        // Get user stats for progress calculation\n        const userStatsResult = await env.DB.prepare(`\n            SELECT \n                u.points as total_points,\n                u.created_at as user_created_at,\n                (SELECT COUNT(*) FROM habits WHERE user_id = ?) as habits_created,\n                (SELECT COUNT(*) FROM habit_completions WHERE user_id = ?) as total_completions,\n                (SELECT COUNT(*) FROM media_uploads WHERE user_id = ? AND file_type LIKE 'image/%') as photos_uploaded,\n                (SELECT COUNT(*) FROM media_uploads WHERE user_id = ? AND file_type LIKE 'video/%') as videos_uploaded,\n                (SELECT COUNT(*) FROM media_uploads WHERE user_id = ?) as total_media\n            FROM users u\n            WHERE u.id = ?\n        `).bind(user.id, user.id, user.id, user.id, user.id, user.id).first();\n        \n        // Calculate current progress for each achievement\n        const achievementsWithProgress = achievements.map(achievement => {\n            let currentProgress = 0;\n            let progressPercentage = 0;\n            \n            switch (achievement.requirement_type) {\n                case 'account_created':\n                    currentProgress = 1;\n                    break;\n                case 'habits_created':\n                    currentProgress = userStatsResult.habits_created;\n                    break;\n                case 'total_completions':\n                    currentProgress = userStatsResult.total_completions;\n                    break;\n                case 'photos_uploaded':\n                    currentProgress = userStatsResult.photos_uploaded;\n                    break;\n                case 'videos_uploaded':\n                    currentProgress = userStatsResult.videos_uploaded;\n                    break;\n                case 'total_media':\n                    currentProgress = userStatsResult.total_media;\n                    break;\n                case 'total_points':\n                    currentProgress = userStatsResult.total_points;\n                    break;\n                case 'habit_streak':\n                    // TODO: Calculate actual streak - for now use placeholder\n                    currentProgress = 0;\n                    break;\n                default:\n                    currentProgress = achievement.earned ? achievement.requirement_value : 0;\n            }\n            \n            progressPercentage = Math.min(100, Math.round((currentProgress / achievement.requirement_value) * 100));\n            \n            return {\n                ...achievement,\n                current_progress: currentProgress,\n                progress_percentage: progressPercentage,\n                is_completed: achievement.earned === 1,\n                is_unlockable: currentProgress >= achievement.requirement_value && !achievement.earned\n            };\n        });\n        \n        // Group achievements by category\n        const groupedAchievements = achievementsWithProgress.reduce((groups, achievement) => {\n            const category = achievement.category;\n            if (!groups[category]) {\n                groups[category] = [];\n            }\n            groups[category].push(achievement);\n            return groups;\n        }, {});\n        \n        // Calculate user achievement stats\n        const totalAchievements = achievements.length;\n        const earnedAchievements = achievements.filter(a => a.earned === 1).length;\n        const totalPointsFromAchievements = achievements\n            .filter(a => a.earned === 1)\n            .reduce((sum, a) => sum + a.points, 0);\n        \n        const stats = {\n            total_achievements: totalAchievements,\n            earned_achievements: earnedAchievements,\n            completion_percentage: Math.round((earnedAchievements / totalAchievements) * 100),\n            total_points: userStatsResult.total_points,\n            achievement_points: totalPointsFromAchievements,\n            unlockable_count: achievementsWithProgress.filter(a => a.is_unlockable).length\n        };\n        \n        return new Response(JSON.stringify({\n            achievements: achievementsWithProgress,\n            grouped_achievements: groupedAchievements,\n            stats\n        }), {\n            status: 200,\n            headers: { 'Content-Type': 'application/json' }\n        });\n        \n    } catch (error) {\n        console.error('Get achievements error:', error);\n        return new Response(JSON.stringify({ \n            error: 'Internal server error' \n        }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n}\n\n// Unlock an achievement manually (for testing or admin purposes)\nexport async function onRequestPost(context) {\n    const { request, env } = context;\n    \n    try {\n        const authResult = await requireAuth(request, env);\n        if (authResult instanceof Response) return authResult;\n        \n        const user = authResult;\n        const body = await request.json();\n        const { achievement_id } = body;\n        \n        if (!achievement_id) {\n            return new Response(JSON.stringify({ \n                error: 'Achievement ID is required' \n            }), {\n                status: 400,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n        \n        // Check if achievement exists and user hasn't earned it\n        const achievement = await env.DB.prepare(\n            'SELECT * FROM achievements WHERE id = ?'\n        ).bind(achievement_id).first();\n        \n        if (!achievement) {\n            return new Response(JSON.stringify({ \n                error: 'Achievement not found' \n            }), {\n                status: 404,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n        \n        const existingUserAchievement = await env.DB.prepare(\n            'SELECT id FROM user_achievements WHERE user_id = ? AND achievement_id = ?'\n        ).bind(user.id, achievement_id).first();\n        \n        if (existingUserAchievement) {\n            return new Response(JSON.stringify({ \n                error: 'Achievement already earned' \n            }), {\n                status: 400,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n        \n        // Award the achievement\n        const { v4: uuidv4 } = await import('uuid');\n        const userAchievementId = uuidv4();\n        \n        await env.DB.prepare(`\n            INSERT INTO user_achievements (id, user_id, achievement_id)\n            VALUES (?, ?, ?)\n        `).bind(userAchievementId, user.id, achievement_id).run();\n        \n        // Award points if the achievement has points\n        if (achievement.points > 0) {\n            await env.DB.prepare('UPDATE users SET points = points + ? WHERE id = ?')\n                .bind(achievement.points, user.id).run();\n        }\n        \n        return new Response(JSON.stringify({\n            message: 'Achievement unlocked!',\n            achievement: achievement,\n            points_awarded: achievement.points\n        }), {\n            status: 200,\n            headers: { 'Content-Type': 'application/json' }\n        });\n        \n    } catch (error) {\n        console.error('Unlock achievement error:', error);\n        return new Response(JSON.stringify({ \n            error: 'Internal server error' \n        }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n}", "export async function onRequestGet({ request, env }) {\n    try {\n        const sessionId = request.headers.get('x-session-id');\n        \n        if (!sessionId) {\n            return new Response(JSON.stringify({ error: 'No session provided' }), {\n                status: 401,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n\n        const sessionQuery = await env.DB.prepare(\n            'SELECT user_id FROM sessions WHERE id = ? AND expires_at > datetime(\"now\")'\n        ).bind(sessionId).first();\n\n        if (!sessionQuery) {\n            return new Response(JSON.stringify({ error: 'Invalid or expired session' }), {\n                status: 401,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n\n        const userId = sessionQuery.user_id;\n\n        // Get friends list\n        const friends = await env.DB.prepare(`\n            SELECT \n                u.id,\n                u.email,\n                u.points,\n                u.weekly_points,\n                uf.created_at as friendship_date,\n                (SELECT COUNT(*) FROM user_achievements WHERE user_id = u.id) as total_achievements\n            FROM user_friends uf\n            JOIN users u ON (\n                CASE \n                    WHEN uf.user_id = ? THEN u.id = uf.friend_id\n                    ELSE u.id = uf.user_id\n                END\n            )\n            WHERE (uf.user_id = ? OR uf.friend_id = ?) AND uf.status = 'accepted'\n            ORDER BY uf.created_at DESC\n        `).bind(userId, userId, userId).all();\n\n        // Get pending friend requests (received)\n        const pendingRequests = await env.DB.prepare(`\n            SELECT \n                fr.id,\n                u.email,\n                fr.created_at\n            FROM friend_requests fr\n            JOIN users u ON fr.from_user_id = u.id\n            WHERE fr.to_user_id = ? AND fr.status = 'pending'\n            ORDER BY fr.created_at DESC\n        `).bind(userId).all();\n\n        // Get sent requests\n        const sentRequests = await env.DB.prepare(`\n            SELECT \n                fr.id,\n                u.email,\n                fr.created_at\n            FROM friend_requests fr\n            JOIN users u ON fr.to_user_id = u.id\n            WHERE fr.from_user_id = ? AND fr.status = 'pending'\n            ORDER BY fr.created_at DESC\n        `).bind(userId).all();\n\n        return new Response(JSON.stringify({\n            friends: friends.results || [],\n            pending_requests: pendingRequests.results || [],\n            sent_requests: sentRequests.results || []\n        }), {\n            status: 200,\n            headers: { 'Content-Type': 'application/json' }\n        });\n\n    } catch (error) {\n        console.error('Friends list error:', error);\n        return new Response(JSON.stringify({ error: 'Failed to load friends' }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n}\n\nexport async function onRequestPost({ request, env }) {\n    try {\n        const sessionId = request.headers.get('x-session-id');\n        const { action, email, request_id } = await request.json();\n        \n        if (!sessionId) {\n            return new Response(JSON.stringify({ error: 'No session provided' }), {\n                status: 401,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n\n        const sessionQuery = await env.DB.prepare(\n            'SELECT user_id FROM sessions WHERE id = ? AND expires_at > datetime(\"now\")'\n        ).bind(sessionId).first();\n\n        if (!sessionQuery) {\n            return new Response(JSON.stringify({ error: 'Invalid or expired session' }), {\n                status: 401,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n\n        const userId = sessionQuery.user_id;\n        const { v4: uuidv4 } = await import('uuid');\n\n        if (action === 'send_request') {\n            // Find user by email\n            const targetUser = await env.DB.prepare(\n                'SELECT id FROM users WHERE email = ?'\n            ).bind(email).first();\n\n            if (!targetUser) {\n                return new Response(JSON.stringify({ error: 'User not found' }), {\n                    status: 404,\n                    headers: { 'Content-Type': 'application/json' }\n                });\n            }\n\n            if (targetUser.id === userId) {\n                return new Response(JSON.stringify({ error: 'Cannot add yourself as friend' }), {\n                    status: 400,\n                    headers: { 'Content-Type': 'application/json' }\n                });\n            }\n\n            // Check if friendship already exists\n            const existingFriendship = await env.DB.prepare(`\n                SELECT id FROM user_friends \n                WHERE ((user_id = ? AND friend_id = ?) OR (user_id = ? AND friend_id = ?))\n            `).bind(userId, targetUser.id, targetUser.id, userId).first();\n\n            if (existingFriendship) {\n                return new Response(JSON.stringify({ error: 'Friendship already exists' }), {\n                    status: 400,\n                    headers: { 'Content-Type': 'application/json' }\n                });\n            }\n\n            // Check if request already exists\n            const existingRequest = await env.DB.prepare(`\n                SELECT id FROM friend_requests \n                WHERE ((from_user_id = ? AND to_user_id = ?) OR (from_user_id = ? AND to_user_id = ?))\n                AND status = 'pending'\n            `).bind(userId, targetUser.id, targetUser.id, userId).first();\n\n            if (existingRequest) {\n                return new Response(JSON.stringify({ error: 'Friend request already sent' }), {\n                    status: 400,\n                    headers: { 'Content-Type': 'application/json' }\n                });\n            }\n\n            // Create friend request\n            await env.DB.prepare(`\n                INSERT INTO friend_requests (id, from_user_id, to_user_id)\n                VALUES (?, ?, ?)\n            `).bind(uuidv4(), userId, targetUser.id).run();\n\n            return new Response(JSON.stringify({ message: 'Friend request sent!' }), {\n                status: 200,\n                headers: { 'Content-Type': 'application/json' }\n            });\n\n        } else if (action === 'accept_request') {\n            // Accept friend request\n            const request = await env.DB.prepare(\n                'SELECT * FROM friend_requests WHERE id = ? AND to_user_id = ? AND status = \"pending\"'\n            ).bind(request_id, userId).first();\n\n            if (!request) {\n                return new Response(JSON.stringify({ error: 'Invalid request' }), {\n                    status: 404,\n                    headers: { 'Content-Type': 'application/json' }\n                });\n            }\n\n            // Update request status\n            await env.DB.prepare(`\n                UPDATE friend_requests \n                SET status = 'accepted', responded_at = CURRENT_TIMESTAMP \n                WHERE id = ?\n            `).bind(request_id).run();\n\n            // Create friendship entries\n            const friendshipId1 = uuidv4();\n            const friendshipId2 = uuidv4();\n            \n            await env.DB.prepare(`\n                INSERT INTO user_friends (id, user_id, friend_id, status, accepted_at)\n                VALUES (?, ?, ?, 'accepted', CURRENT_TIMESTAMP)\n            `).bind(friendshipId1, request.from_user_id, userId).run();\n\n            await env.DB.prepare(`\n                INSERT INTO user_friends (id, user_id, friend_id, status, accepted_at)\n                VALUES (?, ?, ?, 'accepted', CURRENT_TIMESTAMP)\n            `).bind(friendshipId2, userId, request.from_user_id).run();\n\n            // Update friend counts\n            await env.DB.prepare('UPDATE users SET total_friends = total_friends + 1 WHERE id = ?').bind(userId).run();\n            await env.DB.prepare('UPDATE users SET total_friends = total_friends + 1 WHERE id = ?').bind(request.from_user_id).run();\n\n            return new Response(JSON.stringify({ message: 'Friend request accepted!' }), {\n                status: 200,\n                headers: { 'Content-Type': 'application/json' }\n            });\n\n        } else if (action === 'decline_request') {\n            await env.DB.prepare(`\n                UPDATE friend_requests \n                SET status = 'declined', responded_at = CURRENT_TIMESTAMP \n                WHERE id = ? AND to_user_id = ?\n            `).bind(request_id, userId).run();\n\n            return new Response(JSON.stringify({ message: 'Friend request declined' }), {\n                status: 200,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n\n        return new Response(JSON.stringify({ error: 'Invalid action' }), {\n            status: 400,\n            headers: { 'Content-Type': 'application/json' }\n        });\n\n    } catch (error) {\n        console.error('Friends action error:', error);\n        return new Response(JSON.stringify({ error: 'Failed to process request' }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n}", "// Habits management endpoint for StriveTrack\nimport { requireAuth } from '../../utils/auth.js';\nimport { getUserHabits, createHabit, checkAndAwardAchievements } from '../../utils/database.js';\n\nexport async function onRequestGet(context) {\n    const { request, env } = context;\n    \n    try {\n        const authResult = await requireAuth(request, env);\n        if (authResult instanceof Response) return authResult;\n        \n        const user = authResult;\n        const habits = await getUserHabits(user.id, env);\n        \n        return new Response(JSON.stringify({ habits }), {\n            status: 200,\n            headers: { 'Content-Type': 'application/json' }\n        });\n        \n    } catch (error) {\n        console.error('Get habits error:', error);\n        return new Response(JSON.stringify({ \n            error: 'Internal server error' \n        }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n}\n\nexport async function onRequestPost(context) {\n    const { request, env } = context;\n    \n    try {\n        const authResult = await requireAuth(request, env);\n        if (authResult instanceof Response) return authResult;\n        \n        const user = authResult;\n        const body = await request.json();\n        const { name, description, target_frequency, color, weekly_target } = body;\n        \n        if (!name || name.trim() === '') {\n            return new Response(JSON.stringify({ \n                error: 'Habit name is required' \n            }), {\n                status: 400,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n        \n        const habitData = {\n            user_id: user.id,\n            name: name.trim(),\n            description: description?.trim() || '',\n            target_frequency: target_frequency || 1,\n            color: color || '#667eea',\n            weekly_target: weekly_target || 7\n        };\n        \n        const habitId = await createHabit(habitData, env);\n        \n        // Check and award achievements\n        const newAchievements = await checkAndAwardAchievements(user.id, env);\n        \n        return new Response(JSON.stringify({\n            message: 'Habit created successfully',\n            habitId,\n            newAchievements\n        }), {\n            status: 201,\n            headers: { 'Content-Type': 'application/json' }\n        });\n        \n    } catch (error) {\n        console.error('Create habit error:', error);\n        return new Response(JSON.stringify({ \n            error: 'Internal server error' \n        }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n}", "export async function onRequestGet({ request, env }) {\n    try {\n        const url = new URL(request.url);\n        const sessionId = request.headers.get('x-session-id');\n        const leaderboardType = url.searchParams.get('type') || 'weekly';\n        \n        if (!sessionId) {\n            return new Response(JSON.stringify({ error: 'No session provided' }), {\n                status: 401,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n\n        // Validate session\n        const sessionQuery = await env.DB.prepare(\n            'SELECT user_id FROM sessions WHERE id = ? AND expires_at > datetime(\"now\")'\n        ).bind(sessionId).first();\n\n        if (!sessionQuery) {\n            return new Response(JSON.stringify({ error: 'Invalid or expired session' }), {\n                status: 401,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n\n        const userId = sessionQuery.user_id;\n        \n        // Get user's friends\n        const friends = await env.DB.prepare(`\n            SELECT DISTINCT \n                CASE \n                    WHEN uf.user_id = ? THEN uf.friend_id \n                    ELSE uf.user_id \n                END as friend_user_id\n            FROM user_friends uf\n            WHERE (uf.user_id = ? OR uf.friend_id = ?) \n            AND uf.status = 'accepted'\n        `).bind(userId, userId, userId).all();\n\n        const friendIds = friends.results?.map(f => f.friend_user_id) || [];\n        friendIds.push(userId); // Include current user\n        \n        let leaderboardData = [];\n        \n        if (leaderboardType === 'weekly') {\n            // Weekly points leaderboard\n            leaderboardData = await env.DB.prepare(`\n                SELECT \n                    u.id,\n                    u.email,\n                    u.weekly_points as score,\n                    u.weekly_points,\n                    (SELECT COUNT(*) FROM user_achievements WHERE user_id = u.id) as total_achievements,\n                    'weekly_points' as metric\n                FROM users u\n                WHERE u.id IN (${friendIds.map(() => '?').join(',')})\n                ORDER BY u.weekly_points DESC\n                LIMIT 20\n            `).bind(...friendIds).all();\n            \n        } else if (leaderboardType === 'achievements') {\n            // Total achievements leaderboard\n            leaderboardData = await env.DB.prepare(`\n                SELECT \n                    u.id,\n                    u.email,\n                    COUNT(ua.id) as score,\n                    u.weekly_points,\n                    COUNT(ua.id) as total_achievements,\n                    'total_achievements' as metric\n                FROM users u\n                LEFT JOIN user_achievements ua ON u.id = ua.user_id\n                WHERE u.id IN (${friendIds.map(() => '?').join(',')})\n                GROUP BY u.id, u.email, u.weekly_points\n                ORDER BY COUNT(ua.id) DESC\n                LIMIT 20\n            `).bind(...friendIds).all();\n            \n        } else if (leaderboardType === 'streaks') {\n            // Current streaks leaderboard\n            leaderboardData = await env.DB.prepare(`\n                SELECT \n                    u.id,\n                    u.email,\n                    COALESCE(MAX(us.current_streak), 0) as score,\n                    u.weekly_points,\n                    (SELECT COUNT(*) FROM user_achievements WHERE user_id = u.id) as total_achievements,\n                    'current_streaks' as metric\n                FROM users u\n                LEFT JOIN user_streaks us ON u.id = us.user_id\n                WHERE u.id IN (${friendIds.map(() => '?').join(',')})\n                GROUP BY u.id, u.email, u.weekly_points\n                ORDER BY MAX(us.current_streak) DESC\n                LIMIT 20\n            `).bind(...friendIds).all();\n            \n        } else if (leaderboardType === 'challenges') {\n            // Daily challenges completion rate\n            const today = new Date().toISOString().split('T')[0];\n            leaderboardData = await env.DB.prepare(`\n                SELECT \n                    u.id,\n                    u.email,\n                    COUNT(udc.id) as score,\n                    u.weekly_points,\n                    (SELECT COUNT(*) FROM user_achievements WHERE user_id = u.id) as total_achievements,\n                    'daily_challenges' as metric\n                FROM users u\n                LEFT JOIN user_daily_challenges udc ON u.id = udc.user_id \n                    AND udc.challenge_date = ? AND udc.is_completed = 1\n                WHERE u.id IN (${friendIds.map(() => '?').join(',')})\n                GROUP BY u.id, u.email, u.weekly_points\n                ORDER BY COUNT(udc.id) DESC\n                LIMIT 20\n            `).bind(today, ...friendIds).all();\n        }\n\n        // Format leaderboard with ranks and user info\n        const formattedLeaderboard = leaderboardData.results?.map((entry, index) => ({\n            rank: index + 1,\n            user_id: entry.id,\n            email: entry.email,\n            display_name: entry.email.split('@')[0], // Use email prefix as display name\n            score: entry.score,\n            weekly_points: entry.weekly_points,\n            total_achievements: entry.total_achievements,\n            is_current_user: entry.id === userId,\n            metric: entry.metric\n        })) || [];\n\n        // Get user's friends count\n        const friendsCount = await env.DB.prepare(`\n            SELECT COUNT(*) as count FROM user_friends \n            WHERE (user_id = ? OR friend_id = ?) AND status = 'accepted'\n        `).bind(userId, userId).first();\n\n        return new Response(JSON.stringify({\n            leaderboard: formattedLeaderboard,\n            leaderboard_type: leaderboardType,\n            friends_count: friendsCount?.count || 0,\n            user_rank: formattedLeaderboard.findIndex(entry => entry.is_current_user) + 1 || null\n        }), {\n            status: 200,\n            headers: { 'Content-Type': 'application/json' }\n        });\n\n    } catch (error) {\n        console.error('Leaderboard error:', error);\n        return new Response(JSON.stringify({ error: 'Failed to load leaderboards' }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n}", "// Media management endpoint for StriveTrack\nimport { requireAuth } from '../../utils/auth.js';\nimport { getUserMedia, checkAndAwardAchievements } from '../../utils/database.js';\n\nexport async function onRequestGet(context) {\n    const { request, env } = context;\n    \n    try {\n        const authResult = await requireAuth(request, env);\n        if (authResult instanceof Response) return authResult;\n        \n        const user = authResult;\n        const media = await getUserMedia(user.id, env);\n        \n        // Generate signed URLs for R2 objects\n        const mediaWithUrls = await Promise.all(media.map(async (item) => {\n            try {\n                const object = await env.MEDIA_BUCKET.get(item.r2_key);\n                if (object) {\n                    // For Cloudflare R2, we need to create a temporary URL\n                    // In production, you'd want to implement signed URLs\n                    return {\n                        ...item,\n                        url: `/api/media/file/${item.id}`, // We'll create this endpoint\n                        thumbnail: `/api/media/thumbnail/${item.id}`\n                    };\n                }\n                return item;\n            } catch (error) {\n                console.error('Error getting media URL:', error);\n                return item;\n            }\n        }));\n        \n        return new Response(JSON.stringify({ media: mediaWithUrls }), {\n            status: 200,\n            headers: { 'Content-Type': 'application/json' }\n        });\n        \n    } catch (error) {\n        console.error('Get media error:', error);\n        return new Response(JSON.stringify({ \n            error: 'Internal server error' \n        }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n}\n\nexport async function onRequestPost(context) {\n    const { request, env } = context;\n    \n    try {\n        const authResult = await requireAuth(request, env);\n        if (authResult instanceof Response) return authResult;\n        \n        const user = authResult;\n        \n        // Handle form data upload\n        const formData = await request.formData();\n        const file = formData.get('file');\n        const description = formData.get('description') || '';\n        \n        if (!file || !file.name) {\n            return new Response(JSON.stringify({ \n                error: 'File is required' \n            }), {\n                status: 400,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n        \n        // Validate file type\n        const allowedTypes = ['image/jpeg', 'image/png', 'image/gif', 'video/mp4', 'video/quicktime'];\n        if (!allowedTypes.includes(file.type)) {\n            return new Response(JSON.stringify({ \n                error: 'Invalid file type. Only images and videos are allowed.' \n            }), {\n                status: 400,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n        \n        // Validate file size (50MB max)\n        if (file.size > 50 * 1024 * 1024) {\n            return new Response(JSON.stringify({ \n                error: 'File size too large. Maximum 50MB allowed.' \n            }), {\n                status: 400,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n        \n        const { v4: uuidv4 } = await import('uuid');\n        const mediaId = uuidv4();\n        const fileExtension = file.name.split('.').pop();\n        const r2Key = `uploads/${user.id}/${mediaId}.${fileExtension}`;\n        \n        // Upload to R2\n        await env.MEDIA_BUCKET.put(r2Key, file.stream());\n        \n        // Save to database\n        await env.DB.prepare(`\n            INSERT INTO media_uploads (id, user_id, filename, original_name, file_type, file_size, r2_key, description)\n            VALUES (?, ?, ?, ?, ?, ?, ?, ?)\n        `).bind(\n            mediaId,\n            user.id,\n            `${mediaId}.${fileExtension}`,\n            file.name,\n            file.type,\n            file.size,\n            r2Key,\n            description\n        ).run();\n        \n        // Award points for media upload\n        await env.DB.prepare('UPDATE users SET points = points + 5 WHERE id = ?')\n            .bind(user.id).run();\n        \n        // Check and award achievements\n        const newAchievements = await checkAndAwardAchievements(user.id, env);\n        \n        return new Response(JSON.stringify({\n            message: 'Media uploaded successfully',\n            mediaId,\n            points: 5,\n            newAchievements\n        }), {\n            status: 201,\n            headers: { 'Content-Type': 'application/json' }\n        });\n        \n    } catch (error) {\n        console.error('Upload media error:', error);\n        return new Response(JSON.stringify({ \n            error: 'Internal server error' \n        }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n}", "export async function onRequestPost({ request, env }) {\n    try {\n        const sessionId = request.headers.get('x-session-id');\n        \n        if (!sessionId) {\n            return new Response(JSON.stringify({ error: 'No session provided' }), {\n                status: 401,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n\n        const sessionQuery = await env.DB.prepare(\n            'SELECT user_id FROM sessions WHERE id = ? AND expires_at > datetime(\"now\")'\n        ).bind(sessionId).first();\n\n        if (!sessionQuery) {\n            return new Response(JSON.stringify({ error: 'Invalid or expired session' }), {\n                status: 401,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n\n        const userId = sessionQuery.user_id;\n        const {\n            food_name,\n            meal_type = 'snack',\n            calories = 0,\n            protein_g = 0,\n            carbs_g = 0,\n            fat_g = 0,\n            sugar_g = 0,\n            fiber_g = 0,\n            water_ml = 0,\n            is_custom_recipe = false\n        } = await request.json();\n\n        if (!food_name) {\n            return new Response(JSON.stringify({ error: 'Food name is required' }), {\n                status: 400,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n\n        const { v4: uuidv4 } = await import('uuid');\n        const today = new Date().toISOString().split('T')[0]; // YYYY-MM-DD\n        \n        // Log the food entry\n        const logId = uuidv4();\n        await env.DB.prepare(`\n            INSERT INTO user_nutrition_logs (\n                id, user_id, log_date, meal_type, food_name,\n                calories, protein_g, carbs_g, fat_g, sugar_g, fiber_g, water_ml, is_custom_recipe\n            ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n        `).bind(\n            logId, userId, today, meal_type, food_name,\n            calories, protein_g, carbs_g, fat_g, sugar_g, fiber_g, water_ml, is_custom_recipe\n        ).run();\n\n        // Update daily nutrition totals\n        await updateDailyNutrition(env.DB, userId, today);\n\n        // Award points for nutrition logging\n        let pointsEarned = 5; // Base points for logging\n        if (is_custom_recipe) pointsEarned += 10; // Bonus for custom recipes\n        if (water_ml > 0) pointsEarned += 2; // Bonus for hydration\n\n        await env.DB.prepare(\n            'UPDATE users SET points = points + ?, weekly_points = weekly_points + ? WHERE id = ?'\n        ).bind(pointsEarned, pointsEarned, userId).run();\n\n        // Trigger achievement checking\n        try {\n            const { checkAndAwardAchievements } = await import('../../utils/achievements.js');\n            await checkAndAwardAchievements(userId, 'nutrition_log', { food_name, meal_type }, env);\n        } catch (achievementError) {\n            console.error('Achievement check error:', achievementError);\n            // Don't fail the logging if achievements fail\n        }\n\n        return new Response(JSON.stringify({\n            message: 'Nutrition logged successfully!',\n            log_id: logId,\n            points_earned: pointsEarned,\n            date: today\n        }), {\n            status: 200,\n            headers: { 'Content-Type': 'application/json' }\n        });\n\n    } catch (error) {\n        console.error('Nutrition logging error:', error);\n        return new Response(JSON.stringify({ error: 'Failed to log nutrition' }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n}\n\nexport async function onRequestGet({ request, env }) {\n    try {\n        const url = new URL(request.url);\n        const sessionId = request.headers.get('x-session-id');\n        const date = url.searchParams.get('date') || new Date().toISOString().split('T')[0];\n        \n        if (!sessionId) {\n            return new Response(JSON.stringify({ error: 'No session provided' }), {\n                status: 401,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n\n        const sessionQuery = await env.DB.prepare(\n            'SELECT user_id FROM sessions WHERE id = ? AND expires_at > datetime(\"now\")'\n        ).bind(sessionId).first();\n\n        if (!sessionQuery) {\n            return new Response(JSON.stringify({ error: 'Invalid or expired session' }), {\n                status: 401,\n                headers: { 'Content-Type': 'application/json' }\n            });\n        }\n\n        const userId = sessionQuery.user_id;\n\n        // Get nutrition logs for the date\n        const logs = await env.DB.prepare(`\n            SELECT * FROM user_nutrition_logs \n            WHERE user_id = ? AND log_date = ?\n            ORDER BY created_at DESC\n        `).bind(userId, date).all();\n\n        // Get daily nutrition summary\n        const dailySummary = await env.DB.prepare(`\n            SELECT * FROM user_daily_nutrition \n            WHERE user_id = ? AND log_date = ?\n        `).bind(userId, date).first();\n\n        // Get nutrition streak stats\n        const streakStats = await getNutritionStreaks(env.DB, userId);\n\n        return new Response(JSON.stringify({\n            date: date,\n            logs: logs.results || [],\n            daily_summary: dailySummary || null,\n            streak_stats: streakStats\n        }), {\n            status: 200,\n            headers: { 'Content-Type': 'application/json' }\n        });\n\n    } catch (error) {\n        console.error('Get nutrition error:', error);\n        return new Response(JSON.stringify({ error: 'Failed to load nutrition data' }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n}\n\n// Helper function to update daily nutrition totals\nasync function updateDailyNutrition(db, userId, date) {\n    // Calculate totals from logs\n    const totals = await db.prepare(`\n        SELECT \n            SUM(calories) as total_calories,\n            SUM(protein_g) as total_protein_g,\n            SUM(carbs_g) as total_carbs_g,\n            SUM(fat_g) as total_fat_g,\n            SUM(sugar_g) as total_sugar_g,\n            SUM(fiber_g) as total_fiber_g,\n            SUM(water_ml) as total_water_ml\n        FROM user_nutrition_logs\n        WHERE user_id = ? AND log_date = ?\n    `).bind(userId, date).first();\n\n    // Default goals - these could be user-customizable later\n    const calorieGoal = 2000;\n    const proteinGoal = 150;\n    const carbsGoal = 200;\n    const fatGoal = 65;\n\n    // Calculate goal achievement\n    const metCalorieGoal = (totals.total_calories || 0) >= calorieGoal * 0.95 && (totals.total_calories || 0) <= calorieGoal * 1.05;\n    const metProteinGoal = (totals.total_protein_g || 0) >= proteinGoal;\n    const metCarbsGoal = (totals.total_carbs_g || 0) >= carbsGoal * 0.8 && (totals.total_carbs_g || 0) <= carbsGoal * 1.2;\n    const metFatGoal = (totals.total_fat_g || 0) >= fatGoal * 0.8 && (totals.total_fat_g || 0) <= fatGoal * 1.2;\n\n    // Calculate macro balance score (0-100)\n    let balanceScore = 0;\n    if (metCalorieGoal) balanceScore += 25;\n    if (metProteinGoal) balanceScore += 25;\n    if (metCarbsGoal) balanceScore += 25;\n    if (metFatGoal) balanceScore += 25;\n\n    // Update or insert daily nutrition record\n    await db.prepare(`\n        INSERT OR REPLACE INTO user_daily_nutrition (\n            id, user_id, log_date,\n            total_calories, total_protein_g, total_carbs_g, total_fat_g,\n            total_sugar_g, total_fiber_g, total_water_ml,\n            calorie_goal, protein_goal_g, carbs_goal_g, fat_goal_g,\n            met_calorie_goal, met_protein_goal, met_carbs_goal, met_fat_goal,\n            macro_balance_score, updated_at\n        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP)\n    `).bind(\n        `daily_${userId}_${date}`, userId, date,\n        totals.total_calories || 0, totals.total_protein_g || 0, totals.total_carbs_g || 0, totals.total_fat_g || 0,\n        totals.total_sugar_g || 0, totals.total_fiber_g || 0, totals.total_water_ml || 0,\n        calorieGoal, proteinGoal, carbsGoal, fatGoal,\n        metCalorieGoal, metProteinGoal, metCarbsGoal, metFatGoal,\n        balanceScore\n    ).run();\n}\n\n// Helper function to get nutrition streaks\nasync function getNutritionStreaks(db, userId) {\n    const today = new Date().toISOString().split('T')[0];\n    \n    // Get recent nutrition tracking days\n    const recentDays = await db.prepare(`\n        SELECT log_date, macro_balance_score,\n               met_calorie_goal, met_protein_goal, met_carbs_goal, met_fat_goal\n        FROM user_daily_nutrition\n        WHERE user_id = ? AND log_date <= ?\n        ORDER BY log_date DESC\n        LIMIT 30\n    `).bind(userId, today).all();\n\n    let currentStreak = 0;\n    let proteinStreak = 0;\n    let calorieStreak = 0;\n    let macroStreak = 0;\n\n    for (const day of recentDays.results || []) {\n        // General tracking streak\n        if (day.macro_balance_score > 0) {\n            currentStreak++;\n        } else {\n            break;\n        }\n\n        // Protein goal streak\n        if (day.met_protein_goal) {\n            proteinStreak++;\n        } else if (proteinStreak === currentStreak - 1) {\n            // Only break if this was the most recent failure\n            proteinStreak = 0;\n        }\n\n        // Calorie goal streak\n        if (day.met_calorie_goal) {\n            calorieStreak++;\n        } else if (calorieStreak === currentStreak - 1) {\n            calorieStreak = 0;\n        }\n\n        // Macro balance streak (all 3 macros met)\n        if (day.met_protein_goal && day.met_carbs_goal && day.met_fat_goal) {\n            macroStreak++;\n        } else if (macroStreak === currentStreak - 1) {\n            macroStreak = 0;\n        }\n    }\n\n    return {\n        tracking_streak: currentStreak,\n        protein_streak: proteinStreak,\n        calorie_streak: calorieStreak,\n        macro_balance_streak: macroStreak,\n        total_tracking_days: recentDays.results?.length || 0\n    };\n}", "// StriveTrack Cloudflare Pages Middleware\n\nexport async function onRequest(context) {\n    const { request, env, next } = context;\n    const url = new URL(request.url);\n\n    // Add CORS headers for all responses\n    const corsHeaders = {\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization, x-session-id',\n        'Access-Control-Max-Age': '86400',\n    };\n\n    // Handle preflight requests\n    if (request.method === 'OPTIONS') {\n        return new Response(null, { \n            status: 204,\n            headers: corsHeaders \n        });\n    }\n\n    // Initialize database if needed\n    try {\n        await initializeDatabase(env);\n    } catch (error) {\n        console.error('Database initialization error:', error);\n    }\n\n    // Get response from the function\n    const response = await next();\n\n    // Add CORS headers to the response\n    Object.entries(corsHeaders).forEach(([key, value]) => {\n        response.headers.set(key, value);\n    });\n\n    return response;\n}\n\nasync function initializeDatabase(env) {\n    // Check if admin user exists, create if not\n    try {\n        const adminCheck = await env.DB.prepare(\n            'SELECT id FROM users WHERE email = ?'\n        ).bind(env.ADMIN_EMAIL).first();\n\n        if (!adminCheck) {\n            const bcrypt = await import('bcryptjs');\n            const { v4: uuidv4 } = await import('uuid');\n            \n            const hashedPassword = await bcrypt.hash(env.ADMIN_PASSWORD, 12);\n            const adminId = uuidv4();\n\n            await env.DB.prepare(`\n                INSERT INTO users (id, email, password_hash, role, points)\n                VALUES (?, ?, ?, 'admin', 0)\n            `).bind(adminId, env.ADMIN_EMAIL, hashedPassword).run();\n            \n            console.log('Created admin user:', env.ADMIN_EMAIL);\n        }\n    } catch (error) {\n        console.error('Error initializing admin user:', error);\n        // If there's an error, it might be that tables don't exist yet\n        // The schema should be applied manually via wrangler d1 execute\n    }\n}", "import { onRequestGet as __api_media_file__id__js_onRequestGet } from \"/home/user/webapp/functions/api/media/file/[id].js\"\nimport { onRequestPost as __api_achievements_check_js_onRequestPost } from \"/home/user/webapp/functions/api/achievements/check.js\"\nimport { onRequestGet as __api_admin_media_js_onRequestGet } from \"/home/user/webapp/functions/api/admin/media.js\"\nimport { onRequestPost as __api_admin_media_js_onRequestPost } from \"/home/user/webapp/functions/api/admin/media.js\"\nimport { onRequestDelete as __api_admin_users_js_onRequestDelete } from \"/home/user/webapp/functions/api/admin/users.js\"\nimport { onRequestGet as __api_admin_users_js_onRequestGet } from \"/home/user/webapp/functions/api/admin/users.js\"\nimport { onRequestPost as __api_auth_login_js_onRequestPost } from \"/home/user/webapp/functions/api/auth/login.js\"\nimport { onRequestPost as __api_auth_logout_js_onRequestPost } from \"/home/user/webapp/functions/api/auth/logout.js\"\nimport { onRequestPost as __api_auth_register_js_onRequestPost } from \"/home/user/webapp/functions/api/auth/register.js\"\nimport { onRequestGet as __api_auth_validate_session_js_onRequestGet } from \"/home/user/webapp/functions/api/auth/validate-session.js\"\nimport { onRequestGet as __api_challenges_daily_js_onRequestGet } from \"/home/user/webapp/functions/api/challenges/daily.js\"\nimport { onRequestPost as __api_habits_complete_js_onRequestPost } from \"/home/user/webapp/functions/api/habits/complete.js\"\nimport { onRequestGet as __api_habits_weekly_js_onRequestGet } from \"/home/user/webapp/functions/api/habits/weekly.js\"\nimport { onRequestPost as __api_habits_weekly_js_onRequestPost } from \"/home/user/webapp/functions/api/habits/weekly.js\"\nimport { onRequestGet as __api_media_videos_js_onRequestGet } from \"/home/user/webapp/functions/api/media/videos.js\"\nimport { onRequestPost as __api_media_videos_js_onRequestPost } from \"/home/user/webapp/functions/api/media/videos.js\"\nimport { onRequestDelete as __api_habits__id__js_onRequestDelete } from \"/home/user/webapp/functions/api/habits/[id].js\"\nimport { onRequestGet as __api_achievements_index_js_onRequestGet } from \"/home/user/webapp/functions/api/achievements/index.js\"\nimport { onRequestPost as __api_achievements_index_js_onRequestPost } from \"/home/user/webapp/functions/api/achievements/index.js\"\nimport { onRequestGet as __api_friends_index_js_onRequestGet } from \"/home/user/webapp/functions/api/friends/index.js\"\nimport { onRequestPost as __api_friends_index_js_onRequestPost } from \"/home/user/webapp/functions/api/friends/index.js\"\nimport { onRequestGet as __api_habits_index_js_onRequestGet } from \"/home/user/webapp/functions/api/habits/index.js\"\nimport { onRequestPost as __api_habits_index_js_onRequestPost } from \"/home/user/webapp/functions/api/habits/index.js\"\nimport { onRequestGet as __api_leaderboards_index_js_onRequestGet } from \"/home/user/webapp/functions/api/leaderboards/index.js\"\nimport { onRequestGet as __api_media_index_js_onRequestGet } from \"/home/user/webapp/functions/api/media/index.js\"\nimport { onRequestPost as __api_media_index_js_onRequestPost } from \"/home/user/webapp/functions/api/media/index.js\"\nimport { onRequestGet as __api_nutrition_index_js_onRequestGet } from \"/home/user/webapp/functions/api/nutrition/index.js\"\nimport { onRequestPost as __api_nutrition_index_js_onRequestPost } from \"/home/user/webapp/functions/api/nutrition/index.js\"\nimport { onRequest as ___middleware_js_onRequest } from \"/home/user/webapp/functions/_middleware.js\"\n\nexport const routes = [\n    {\n      routePath: \"/api/media/file/:id\",\n      mountPath: \"/api/media/file\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_media_file__id__js_onRequestGet],\n    },\n  {\n      routePath: \"/api/achievements/check\",\n      mountPath: \"/api/achievements\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_achievements_check_js_onRequestPost],\n    },\n  {\n      routePath: \"/api/admin/media\",\n      mountPath: \"/api/admin\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_admin_media_js_onRequestGet],\n    },\n  {\n      routePath: \"/api/admin/media\",\n      mountPath: \"/api/admin\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_admin_media_js_onRequestPost],\n    },\n  {\n      routePath: \"/api/admin/users\",\n      mountPath: \"/api/admin\",\n      method: \"DELETE\",\n      middlewares: [],\n      modules: [__api_admin_users_js_onRequestDelete],\n    },\n  {\n      routePath: \"/api/admin/users\",\n      mountPath: \"/api/admin\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_admin_users_js_onRequestGet],\n    },\n  {\n      routePath: \"/api/auth/login\",\n      mountPath: \"/api/auth\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_auth_login_js_onRequestPost],\n    },\n  {\n      routePath: \"/api/auth/logout\",\n      mountPath: \"/api/auth\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_auth_logout_js_onRequestPost],\n    },\n  {\n      routePath: \"/api/auth/register\",\n      mountPath: \"/api/auth\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_auth_register_js_onRequestPost],\n    },\n  {\n      routePath: \"/api/auth/validate-session\",\n      mountPath: \"/api/auth\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_auth_validate_session_js_onRequestGet],\n    },\n  {\n      routePath: \"/api/challenges/daily\",\n      mountPath: \"/api/challenges\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_challenges_daily_js_onRequestGet],\n    },\n  {\n      routePath: \"/api/habits/complete\",\n      mountPath: \"/api/habits\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_habits_complete_js_onRequestPost],\n    },\n  {\n      routePath: \"/api/habits/weekly\",\n      mountPath: \"/api/habits\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_habits_weekly_js_onRequestGet],\n    },\n  {\n      routePath: \"/api/habits/weekly\",\n      mountPath: \"/api/habits\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_habits_weekly_js_onRequestPost],\n    },\n  {\n      routePath: \"/api/media/videos\",\n      mountPath: \"/api/media\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_media_videos_js_onRequestGet],\n    },\n  {\n      routePath: \"/api/media/videos\",\n      mountPath: \"/api/media\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_media_videos_js_onRequestPost],\n    },\n  {\n      routePath: \"/api/habits/:id\",\n      mountPath: \"/api/habits\",\n      method: \"DELETE\",\n      middlewares: [],\n      modules: [__api_habits__id__js_onRequestDelete],\n    },\n  {\n      routePath: \"/api/achievements\",\n      mountPath: \"/api/achievements\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_achievements_index_js_onRequestGet],\n    },\n  {\n      routePath: \"/api/achievements\",\n      mountPath: \"/api/achievements\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_achievements_index_js_onRequestPost],\n    },\n  {\n      routePath: \"/api/friends\",\n      mountPath: \"/api/friends\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_friends_index_js_onRequestGet],\n    },\n  {\n      routePath: \"/api/friends\",\n      mountPath: \"/api/friends\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_friends_index_js_onRequestPost],\n    },\n  {\n      routePath: \"/api/habits\",\n      mountPath: \"/api/habits\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_habits_index_js_onRequestGet],\n    },\n  {\n      routePath: \"/api/habits\",\n      mountPath: \"/api/habits\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_habits_index_js_onRequestPost],\n    },\n  {\n      routePath: \"/api/leaderboards\",\n      mountPath: \"/api/leaderboards\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_leaderboards_index_js_onRequestGet],\n    },\n  {\n      routePath: \"/api/media\",\n      mountPath: \"/api/media\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_media_index_js_onRequestGet],\n    },\n  {\n      routePath: \"/api/media\",\n      mountPath: \"/api/media\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_media_index_js_onRequestPost],\n    },\n  {\n      routePath: \"/api/nutrition\",\n      mountPath: \"/api/nutrition\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_nutrition_index_js_onRequestGet],\n    },\n  {\n      routePath: \"/api/nutrition\",\n      mountPath: \"/api/nutrition\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_nutrition_index_js_onRequestPost],\n    },\n  {\n      routePath: \"/\",\n      mountPath: \"/\",\n      method: \"\",\n      middlewares: [___middleware_js_onRequest],\n      modules: [],\n    },\n  ]", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/home/user/webapp/.wrangler/tmp/bundle-ovZuRF/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/home/user/webapp/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/home/user/webapp/.wrangler/tmp/bundle-ovZuRF/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/home/user/webapp/.wrangler/tmp/bundle-ovZuRF/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/home/user/webapp/node_modules/wrangler/templates/pages-template-worker.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/home/user/webapp/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/home/user/webapp/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/home/user/webapp/node_modules/wrangler/templates/pages-template-worker.ts\";\n\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "import { match } from \"path-to-regexp\";\n\n//note: this explicitly does not include the * character, as pages requires this\nconst escapeRegex = /[.+?^${}()|[\\]\\\\]/g;\n\ntype HTTPMethod =\n\t| \"HEAD\"\n\t| \"OPTIONS\"\n\t| \"GET\"\n\t| \"POST\"\n\t| \"PUT\"\n\t| \"PATCH\"\n\t| \"DELETE\";\n\n/* TODO: Grab these from @cloudflare/workers-types instead */\ntype Params<P extends string = string> = Record<P, string | string[]>;\n\ntype EventContext<Env, P extends string, Data> = {\n\trequest: Request;\n\tfunctionPath: string;\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n\tnext: (input?: Request | string, init?: RequestInit) => Promise<Response>;\n\tenv: Env & { ASSETS: { fetch: typeof fetch } };\n\tparams: Params<P>;\n\tdata: Data;\n};\n\ndeclare type PagesFunction<\n\tEnv = unknown,\n\tP extends string = string,\n\tData extends Record<string, unknown> = Record<string, unknown>,\n> = (context: EventContext<Env, P, Data>) => Response | Promise<Response>;\n/* end @cloudflare/workers-types */\n\ntype RouteHandler = {\n\troutePath: string;\n\tmountPath: string;\n\tmethod?: HTTPMethod;\n\tmodules: PagesFunction[];\n\tmiddlewares: PagesFunction[];\n};\n\n// inject `routes` via ESBuild\ndeclare const routes: RouteHandler[];\n// define `__FALLBACK_SERVICE__` via ESBuild\ndeclare const __FALLBACK_SERVICE__: string;\n\n// expect an ASSETS fetcher binding pointing to the asset-server stage\ntype FetchEnv = {\n\t[name: string]: { fetch: typeof fetch };\n\tASSETS: { fetch: typeof fetch };\n};\n\ntype WorkerContext = {\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n};\n\nfunction* executeRequest(request: Request) {\n\tconst requestPath = new URL(request.url).pathname;\n\n\t// First, iterate through the routes (backwards) and execute \"middlewares\" on partial route matches\n\tfor (const route of [...routes].reverse()) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// replaces with \"\\\\$&\", this prepends a backslash to the matched string, e.g. \"[\" becomes \"\\[\"\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult) {\n\t\t\tfor (const handler of route.middlewares.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: mountMatchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t// Then look for the first exact route match and execute its \"modules\"\n\tfor (const route of routes) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: true,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult && route.modules.length) {\n\t\t\tfor (const handler of route.modules.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: matchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default {\n\tasync fetch(\n\t\toriginalRequest: Request,\n\t\tenv: FetchEnv,\n\t\tworkerContext: WorkerContext\n\t) {\n\t\tlet request = originalRequest;\n\t\tconst handlerIterator = executeRequest(request);\n\t\tlet data = {}; // arbitrary data the user can set between functions\n\t\tlet isFailOpen = false;\n\n\t\tconst next = async (input?: RequestInfo, init?: RequestInit) => {\n\t\t\tif (input !== undefined) {\n\t\t\t\tlet url = input;\n\t\t\t\tif (typeof input === \"string\") {\n\t\t\t\t\turl = new URL(input, request.url).toString();\n\t\t\t\t}\n\t\t\t\trequest = new Request(url, init);\n\t\t\t}\n\n\t\t\tconst result = handlerIterator.next();\n\t\t\t// Note we can't use `!result.done` because this doesn't narrow to the correct type\n\t\t\tif (result.done === false) {\n\t\t\t\tconst { handler, params, path } = result.value;\n\t\t\t\tconst context = {\n\t\t\t\t\trequest: new Request(request.clone()),\n\t\t\t\t\tfunctionPath: path,\n\t\t\t\t\tnext,\n\t\t\t\t\tparams,\n\t\t\t\t\tget data() {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t},\n\t\t\t\t\tset data(value) {\n\t\t\t\t\t\tif (typeof value !== \"object\" || value === null) {\n\t\t\t\t\t\t\tthrow new Error(\"context.data must be an object\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// user has overriden context.data, so we need to merge it with the existing data\n\t\t\t\t\t\tdata = value;\n\t\t\t\t\t},\n\t\t\t\t\tenv,\n\t\t\t\t\twaitUntil: workerContext.waitUntil.bind(workerContext),\n\t\t\t\t\tpassThroughOnException: () => {\n\t\t\t\t\t\tisFailOpen = true;\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconst response = await handler(context);\n\n\t\t\t\tif (!(response instanceof Response)) {\n\t\t\t\t\tthrow new Error(\"Your Pages function should return a Response\");\n\t\t\t\t}\n\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else if (__FALLBACK_SERVICE__) {\n\t\t\t\t// There are no more handlers so finish with the fallback service (`env.ASSETS.fetch` in Pages' case)\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else {\n\t\t\t\t// There was not fallback service so actually make the request to the origin.\n\t\t\t\tconst response = await fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\treturn await next();\n\t\t} catch (error) {\n\t\t\tif (isFailOpen) {\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t},\n};\n\n// This makes a Response mutable\nconst cloneResponse = (response: Response) =>\n\t// https://fetch.spec.whatwg.org/#null-body-status\n\tnew Response(\n\t\t[101, 204, 205, 304].includes(response.status) ? null : response.body,\n\t\tresponse\n\t);\n", "/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\", delimiter = \"/#?\" } = options;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  const isSafe = (value: string): boolean => {\n    for (const char of delimiter) if (value.indexOf(char) > -1) return true;\n    return false;\n  };\n\n  const safePattern = (prefix: string) => {\n    const prev = result[result.length - 1];\n    const prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n\n    if (prev && !prevText) {\n      throw new TypeError(\n        `Must have text between two parameters, missing text after \"${(prev as Key).name}\"`,\n      );\n    }\n\n    if (!prevText || isSafe(prevText)) return `[^${escapeString(delimiter)}]+?`;\n    return `(?:(?!${escapeString(prevText)})[^${escapeString(delimiter)}])+?`;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || safePattern(prefix),\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? safePattern(prefix) : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            throw new TypeError(\n              `Can not repeat \"${token.name}\" without a prefix and suffix`,\n            );\n          }\n\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n"],
  "mappings": "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Y;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,MAC5B;AAOA,UAAI,SAAS;AAAA,QACT;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAChD;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,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",
  "names": ["version", "URL", "random", "callback", "salt", "stringToBytes", "utfx", "b", "err", "checkAndAwardAchievements", "onRequestGet", "onRequestPost", "onRequestGet", "onRequestPost", "onRequestPost", "onRequestPost", "onRequestGet", "onRequestGet", "onRequestPost", "onRequestGet", "onRequestPost", "onRequestPost", "checkAndAwardAchievements", "onRequestGet", "onRequestDelete", "init_id", "onRequestGet", "onRequestPost", "init_achievements", "onRequestGet", "onRequestPost", "request", "onRequestGet", "onRequestPost", "checkAndAwardAchievements", "onRequestGet", "f", "onRequestGet", "onRequestPost", "checkAndAwardAchievements", "init_media", "onRequestPost", "checkAndAwardAchievements", "onRequestGet", "init_id", "init_achievements", "init_media", "onRequestGet", "onRequestPost", "onRequestDelete", "parse", "value", "_a", "result", "char", "prefix", "i", "parse"]
}
